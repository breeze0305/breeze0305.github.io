{"pages":[{"title":"GTA","text":"","link":"/artwork_second_page3/index.html"},{"title":"作品集","text":"Dead by daylight APEX GTA Forza Horizon 4 其他遊戲","link":"/Artwork/index.html"},{"title":"","text":"Hi, 這是微風 我是微風。 如你所見，我是一位在師範學校讀電機的剪輯師，簡直是 buff 上滿 平常的樂趣就是剪片，跟看影片–Youtube &amp; Bilibili 嚴重中毒 如你有什麼問題，歡迎聯繫我的 Discord 與 IG，我將毫不吝嗇的回答你的問題Line 只用在工作上，已開啟陌生訊息阻擋，非必要不加好友 「原本要走向 PV 師, 結果變成斜咖 meme 遊戲影片剪輯師」 委託項目請按我 聯絡方式 &amp; 個人訊息 你所想到的所有聯絡方式都在旁邊了 Discord: 微風 #8410 贊助我: 關於本站：這是一個使用 Hexo 創建的，託管在 GitHub-page 上的個人 Blog。在主題 Anatole 的基礎上做了大量修改和優化，製作成了主題 Anatolo。大量模仿 锦心 大佬的作品，如果大家願意也可以去看看大佬的作品。","link":"/about/index.html"},{"title":"APEX","text":"","link":"/artwork_second_page2/index.html"},{"title":"Forza Horizon 4","text":"","link":"/artwork_second_page4/index.html"},{"title":"Dead by daylight","text":"","link":"/artwork_second_page1/index.html"},{"title":"其他遊戲","text":"","link":"/artwork_second_page5/index.html"},{"title":"日誌","text":".purple {color: #5900FF;} 2023/05/28 更新大數據作業 0522、重新編輯 css 樣式、新增 download 按鈕下載 custom.csv 與 scores.csv 2023/05/25 修復委託項目連結因中文字符產生的連結錯誤、作品連結 html 空行導致顯示錯誤 2023/05/24 更新了作品集: 一部阿萬的 DBD 影片、一部風聲盃比賽前導片、漣韵初配信影片 2023/05/17 修改 b050 業面, 新增 f-string 寫法與連結 2023/05/15 zerojudge 新增 a044. 空間切割、b050. 1. 集合運算、a445. 新手訓練系列 - 我的朋友很少 2023/05/13 新增 python-f_string 介紹 2023/05/06 zerojudge 新增 e272. gcd(Fm,Fn)、c087. 00412 - Pi、a054. 電話客服中心(dictionary 解法) 2023/04/29 zerojudge 新增 b367. 翻轉世界 2023/04/27 恭喜阿秉通過 twitch 勾勾、新增有勾勾實況主標示 2023/04/25 電機營傳承介面新增更多 gura.gif、內容完成度 75% 2023/04/24 修改大數據期中考題程式碼、附上驗證測資 json 檔案 1,2,3 2023/04/22 在電機營網頁中加入一些 gura 的 gif- 好油喔 peko 2023/04/21 電機營內容完成度 70%、html 超沒邏輯 2023/04/20 電機營內容完成度 45%、有一個 bug 抓不出來超不爽, 我直接註解掉那個功能, 讚 2023/04/19 電機營部分架構撰寫、暫時關閉 顯示 2023/04/17 zerojudge 頁面新增大數據期中考題目 2023/04/15 修復了 中的超連結 bug 2023/04/15 新增了曾經合作的 4gamers 實況主 KO、新增 KO0416 剪輯作品 2023/04/15 新增了大量的剪輯作品、微調版型 2023/04/15 更新了合作實況主列表(新增草草、野熊)、新增委託封面範例圖 2023/04/14 新增委託項目、更新 about 內容、增加一點點小彩蛋 2023/04/14 更新日誌新增、電腦配備更新、移除 links 介面","link":"/update/index.html"}],"posts":[{"title":"a006. 一元二次方程式","text":"求一元二次方程式 ax2+bx+c=0 的根 輸入說明 每組輸入共一行，內含三個整數 a, b, c 以空白隔開。 輸出說明Two different roots x1=?? , x2=?? Two same roots x=?? No real root PS: 答案均為整數，若有兩個根則大者在前 1234567891011121314151617181920import math # 引入 math 模組# 讀入三個整數 a, b, c，使用 map() 函式將輸入轉換成整數a,b,c=map(int,input().split())# 計算判斷式 d_check 的值d_check=b*b-4*a*c# 判斷 d_check 的值，並輸出結果if d_check &lt; 0 : # 判斷 d_check 是否小於 0，若是則無實數解 print(&quot;No real root&quot;)elif d_check == 0 : # 判斷 d_check 是否等於 0，若是則有相同的兩個解 print(&quot;Two same roots x=&quot; + str(-b//(2*a))) # 計算出相同解的值，並輸出結果else : # 若 d_check 大於 0，則有兩個不同的實數解 d_check=int(math.sqrt(d_check)) # 計算出根號下的值(默認為 float)，並轉換成整數 int print(&quot;Two different roots x1=&quot;+str((-b+d_check)//(2*a))+&quot; , x2=&quot;+str((-b-d_check)//(2*a))+&quot;&quot;)# ans_1=(-b+math.sqrt(b*b-4*a*c))//(2*a)# ans_2=(-b-math.sqrt(b*b-4*a*c))//(2*a) a006. 一元二次方程式","link":"/2023/04/12/a006_hide/"},{"title":"Hello World","text":"你好，世界 這是一個由開源 Hexo 所架設的網站，謝謝各方開源人士的幫忙 Anatolo 简介Anatolo 是一個基於 Hexo blog 框架的主題，旨在為用戶提供簡潔、優美、易於定制的 blog 主題。 特性 簡潔美觀：清新簡潔的設計，專注於內容展示。 響應式設計：針對不同設備自動調整佈局，提供更好的閱讀體驗。 高度定制化：提供大量可配置的選項，可定制博客主題的各個方面。 支持多種代碼高亮風格：提供多種代碼高亮風格，讓代碼展示更美觀。 響應式音樂播放器：集成了響應式音樂播放器，支持多種音頻格式，讓你的博客更有趣。 使用 安裝Clone: 1234git clone https://gitee.com/Lhcfl/hexo-theme-anatolo.git themes/Anatolo或者直接下載主題 zip 包解壓至主題目錄下，重命名為 Anatolo 安裝依賴 123npm install hexo-renderer-pug --savenpm install hexo-renderer-stylus --save 配置 複製 _config.example.yml 為_config.yml修改 hexo 根目錄下的 _config.yml ： theme: Anatolo","link":"/2023/03/19/Hello%20World/"},{"title":"Hexo","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/03/19/Hexo/"},{"title":"a005. Eva 的回家作業","text":"Eva 的家庭作業裏有很多數列填空練習。填空練習的要求是：已知數列的前四項，填出第五項。因為已經知道這些數列只可能是等差或等比數列，她決定寫一個程式來完成這些練習。 輸入說明 第一行是數列的數目 t（0 &lt;= t &lt;= 20）。 以下每行均包含四個整數，表示數列的前四項。 約定數列的前五項均為不大於 105 的自然數，等比數列的比值也是自然數。 輸出說明 對輸入的每個數列，輸出它的前五項。 1234567891011121314151617181920212223242526# 讀取輸入的整數number = int(input())# 進行 number 次循環for i in range(number): # 讀取一行整數並將其分割為列表 the_list = list(map(int,input().split())) # 如果最後三個數字形成等差數列 if the_list[3] - the_list[2] == the_list[2] - the_list[1]: # 將下一個數字添加到列表中 the_list.append(the_list[3] * 2 - the_list[2]) # 將列表中的所有數字作為字符串輸出，使用空格作為分隔符 print(*the_list, sep=' ') # 如果最後三個數字不形成等差數列 else: # 將下一個數字添加到列表中 the_list.append(the_list[3] * the_list[3] // the_list[2]) # 將列表中的所有數字作為字符串輸出，使用空格作為分隔符 print(*the_list, sep=' ') a005. Eva 的回家作業","link":"/2023/04/12/a005_hide/"},{"title":"a015. 矩陣的翻轉","text":"已知一 (m x n) 矩陣 A，我們常常需要用到另一個將 A 中之行與列調換的矩陣。這個動作叫做矩陣的翻轉。舉例來說，若 A = [3 1 2] [8 5 4]則 AT = [3 8] [1 5] [2 4] 現在 請您針對所讀取到的矩陣進行翻轉。 1234567891011121314151617181920212223242526272829303132333435363738# 使用 while 迴圈，持續執行矩陣轉置過程，直到遇到例外（Exception）才終止while 1: try: # 輸入矩陣的行和列數 row, col = map(int, input().split()) # 初始化一個空列表，用於存儲矩陣 putin = [] # 根據行數讀取矩陣 for i in range(0, row, 1): # 讀取一行，並將其映射為整數列表 temp = list(map(int, input().split())) # 將該行添加到矩陣中 putin.append(temp) # 初始化一個新的空矩陣，用於存儲轉置後的矩陣 output = [] for i in range(0, col, 1): output.append([0] * row) # 進行矩陣轉置 for i in range(0, row, 1): for j in range(0, col, 1): # 將原矩陣的行列元素對調 output[j][i] = putin[i][j] # 輸出轉置後的矩陣 for i in range(0, col, 1): # 使用 * 來輸出列表中的每個元素，並用空格分隔 print(*output[i]) # 當遇到例外時，跳出迴圈 except: break a015. 矩陣的翻轉","link":"/2023/04/10/a015_hide/"},{"title":"a010. 因數分解","text":"各位在國小時都學過因數分解，都瞭解怎麼樣用紙筆計算出結果，現在由你來敎電腦做因數分解。 因數分解就是把一個數字，切分為數個質數的乘積，如 12=2^2 * 3 其中, 次方的符號以 ^ 來表示 輸入說明 輸入共一行。每行包含一個整數，符合大於 1 且小於等於 100000000 輸出說明 針對每一行輸入整數輸出一個因數分解字串 此題有些微複雜, 故將重點提出於 def analysis(num)函式, 可以直接將函式內容貼在主程式 else 下方即可 此題需要判斷的兩個點(1) 1 次方不用顯示次方, 大於一次方需要顯示次方(2) 每一個位數需要加上「*」, 最後一個位數不用加上「*」 1234567891011121314151617181920212223242526272829# 定義一個名為 analysis 的函數，用於對輸入的整數進行因式分解def analysis(num): i=2 # 從 2 開始作為潛在的因數 count=0 # 計算因數出現的次數 # 無限循環，直到 num 被完全分解, 是否結束由 if 判斷 while 1: if num % i == 0: # 如果 i 是因數 count+=1 # 增加因數的次數 num=num//i # 更新 num 值 else: # 不是因數, 準備輸出 or i 往後移動 if count==1: # 如果因數出現一次 print(i,end='') # 直接輸出因數 elif count &gt; 1: # 如果因數出現多次 print(str(i)+'^'+str(count),end='') # 輸出因數和次數 if num==1: # 如果 num 已經被完全分解 break # 跳出循環 elif count &gt;= 1: # 如果因數次數大於等於 1 print(' * ',end='') # 輸出乘法符號 count=0 # 重置因數次數 i+=1 # 嘗試下一個潛在因數# 讀取使用者輸入的整數num=int(input())if num == 1: # 如果輸入為 1 print(&quot;1&quot;) # 直接輸出 1else : analysis(num) # 調用 analysis 函數進行因式分解 a010. 因數分解","link":"/2023/04/12/a010_hide/"},{"title":"a040. 阿姆斯壯數","text":"所謂 Armstrong number 指的是一個 n 位數的整數，它的所有位數的 n 次方和恰好等於自己。 如；1634 = 1^4+6^4+3^4+4^ 請依題目需求在一定範圍內找出該範圍內的所有 armstrong numbers. 輸入說明 輸入共一行包含兩個數字 n, m(n&lt;m, n&gt;0, m&lt;=1000000)，代表所有尋找 armstrong number 的範圍 輸出說明 將所有範圍內的 armstrong number 依序由小到大輸出，如果沒有找到請輸出 none. 1234567891011121314151617181920212223242526272829# 讀取輸入範圍first, end = map(int, input().split())# 檢查是否有輸出no_output_check = 0# 在範圍內進行迭代for i in range(first, end + 1, 1): temp = 0 i_temp = i # 獲取數字長度 length = len(str(i)) # 迭代數字的每一位 for j in range(0, length, 1): # 將每一位數的 length 次方加到 temp temp = temp + (i_temp % 10) ** length # 將 i_temp 除以 10，往下一位數 i_temp = i_temp // 10 # 檢查 temp 是否等於 i，如果是，則輸出 if temp == i: print(i, end=' ') no_output_check += 1# 如果沒有輸出，則顯示 &quot;none&quot;if no_output_check == 0: print('none') a040. 阿姆斯壯數","link":"/2023/04/12/a040_hide/"},{"title":"a054. 電話客服中心","text":"很多銀行及公司設立了電話客服中心來服務他們的客戶。為了加速身分的查核，常常會要求打電話進來的客戶輸入他的身分證號碼。可是電話上只有數字鍵，要輸入身分證號碼的第一個字母有點麻煩，因此有的語音系統會要求來電者輸入後 9 碼，再根據後 9 碼來推算可能的英文字母。 很多人都知道，身分證號碼的最後一碼是「檢查碼」，它是用前 9 碼所推算出來的，其推算的規則如下： 1. 先依照下表將英文字母轉換為 2 位數字，再加上第 2 到第 9 位的 8 位數字一共有 10 位數字。 台北市 A 10 彰化縣 N 22 台中市 B 11 新竹市 O 35 基隆市 C 12 雲林縣 P 23 台南市 D 13 嘉義縣 Q 24 高雄市 E 14 台南縣 R 25 台北縣 F 15 高雄縣 S 26 宜蘭縣 G 16 屏東縣 T 27 桃園縣 H 17 花蓮縣 U 28 嘉義市 I 34 台東縣 V 29 新竹縣 J 18 金門縣 W 32 苗栗縣 K 19 澎湖縣 X 30 台中縣 L 20 陽明山 Y 31 南投縣 M 21 連江縣 Z 33 2. 由左至右，第一位乘 1，第二位乘 9，第三位乘 8，第四位乘 7...，以此類推，最後一位乘 1。 求各位相對數字乘積的總和 s。 3. 求 s 的個位數 m。(檢查碼只有一位數，因此若 c = 10 時，則檢查碼為 0。) 檢查碼 c = 10 - m 。 假設某人的身份證號碼前 9 碼為 F13024567，那麼他的最後一位檢查碼的計算過程如下： F 1 3 0 2 4 5 6 7 1 5 1 3 0 2 4 5 6 7 ×1 ×9 ×8 ×7 ×6 ×5 ×4 ×3 ×2 ×1 1 + 45 + 8 + 21 + 0 + 10 + 16 + 15 + 12 + 7 = 135 檢查碼 = 10 - (135 % 10) = 5 根據上面的規則，A12345678、M12345678 和 W12345678 這三個號碼的檢查碼都是 9。因此，如果在電話上所輸入的後 9 碼是 123456789 時，它的第一位英文字母可能是 A，也可能是 M 或 W。 12345678910111213141516171819202122232425262728293031323334# 每個行政區域的編號對應的數字，第一個元素代表 A 區域 locate_list=[1, 10, 19, 28, 37, 46, 55, 64, 39, 73, 82, 2, 11, 20, 48, 29, 38, 47, 56, 65, 74, 83, 21, 3, 12, 30]# 每個行政區域的英文縮寫，第一個元素代表 A 區域 locate_eng=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']# 存放符合的行政區域編號所對應的索引 ans=[]# 計數符合的行政區域數量 count=0# 把輸入存放至一個列表中 id=list(input())# 計算身份證字號的後九碼, 第九碼不計算 sum_num=0for i in range(0,9,1): sum_num=sum_num+int(id[i])*(8-i)# 計算測試碼 test=10-int(id[8])# 測試碼 + 餘數碼 = 檢查碼 # 在所有可能的行政區域編號中，搜尋符合的行政區域編號 for i in range(0,26,1): if (sum_num+locate_list[i])%10 == test%10: ans.append(i) count+=1# 印出所有符合的行政區域編號所對應的英文字母 for i in range (0,count,1): print(locate_eng[ans[i]],end='') a054. 電話客服中心","link":"/2023/04/10/a054_hide/"},{"title":"b374. [福州 19 中] 众数","text":"給定 N 個無序的 1 到 30000 之間的正整數，其中 1≤N≤10000。同一個正整數可能會出現多次，出現次數最多的整數稱為众數。請求出它的众數及它出現的次數。 輸入說明 輸入文件第一行為正整數的個數 N，第二行開始是 N 個正整數，每兩個正整數之間用一個空格隔開。 輸出說明 輸出文件有若干行（因為众數可能不唯一），每行兩個數，第 1 個是众數，第 2 個是众數出現的次數，兩個數之間用一個空格隔開。 123456789101112131415161718192021222324252627282930313233343536373839404142434445# 讀取數量輸入num = int(input())# 讀取一個數字序列並轉換為整數列表the_list = list(map(int, input().split()))# 對列表進行排序the_list.sort()# 初始化答案列表和計數列表ans = []count = []# 將列表中的第一個元素加入答案列表和計數列表ans.append(the_list[0])count.append(0)j = 0# 計數列表的第一個元素增加 1count[j] += 1max_num = 0# 遍歷排序後的列表for i in range(1, num, 1): # 如果當前元素與前一個元素相同 if the_list[i] == the_list[i - 1]: # 增加相應索引的計數值 count[j] += 1 else: # 更新最大出現次數 if max_num &lt; count[j]: max_num = count[j] # 將當前元素添加到答案列表中 ans.append(the_list[i]) # 更新索引值 j += 1 # 初始化新元素的計數值 count.append(0) # 新元素的計數值加 1 count[j] += 1# 遍歷計數列表for i in range(0, j + 1, 1): # 如果當前計數值等於最大計數值 if count[i] == max_num: # 輸出答案列表中對應的元素和計數值 print(ans[i], count[i]) b374. [福州 19 中]众数","link":"/2023/04/12/b374_hide/"},{"title":"a263. 日期差幾天","text":"給你兩個日期，問這兩個日期相差幾天。 輸入說明 輸入有多筆測資，每筆測資有兩行，每行有三個整數依序是年、月、日。輸入以 EOF 作為結束，題目保證不會有不符合的測資出現。 輸出說明 輸出兩個日期差幾天。 上面的程式碼是此題的標準解法, 需要用到 datatime 函式庫, 不然運行會 TLE(超時)下面的程式碼為邏輯程式碼, 一樣是正確的版本, 本地可執行, 驗證 TLEpython for 迴圈容易占用過多時間 1234567891011121314151617181920212223242526from datetime import datewhile True: try: # 讀取輸入日期 year1, month1, day1 = map(int, input().split()) year2, month2, day2 = map(int, input().split()) # 轉換成 date 物件 date1 = date(year1, month1, day1) date2 = date(year2, month2, day2) # 計算日期差 delta = (date2 - date1) # 輸出結果 if int(delta.days)&lt;0: print(-delta.days) else: print(delta.days) except: # 輸入結束 break 12345678910111213141516171819202122232425262728293031323334353637383940def leap_check(year): if (year%400==0) or (year%4==0 and year%100!=0): return 1 else: return 0def leap_year_sum_day(year): # 回傳年天數 if leap_check(year): return 366 else: return 365def leap_month_sum_day(month,year): # 回傳該月份累積天數 leap_year_day_add=[0,31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366] not_leap_year_day_add=[0,31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365] if leap_check(year): return leap_year_day_add[month-1] else: return not_leap_year_day_add[month-1]while True: try: head=list(map(int,input().split())) tail=list(map(int,input().split())) if head[0]&gt;tail[0] or (head[0]==tail[0] and head[1]&gt;tail[1]) or (head[0]==tail[0] and head[1]==tail[1] and head[2]&gt;tail[2]): temp=list(tail) tail=list(head) head=list(temp) sum_day=0 for i in range(head[0]+1,tail[0],1): sum_day=sum_day+leap_year_sum_day(i) if head[0]!=tail[0]: sum_day=sum_day+leap_month_sum_day(tail[1],tail[0])+tail[2]+leap_year_sum_day(head[0])-leap_month_sum_day(head[1],head[0])-head[2]# 計算 tail 年累積天數 +head 年剩餘天數 else: sum_day=sum_day+leap_month_sum_day(tail[1],tail[0])+tail[2]-leap_month_sum_day(head[1],head[0])-head[2] print(leap_month_sum_day(tail[1],tail[0]),tail[2],leap_month_sum_day(head[1],head[0]),head[2]) print(sum_day) except: break a263. 日期差幾天","link":"/2023/04/12/a263_hide/"},{"title":"大數據期中考","text":"第一題 12345678910111213141516171819202122n=int(input())sum_a=1for i in range(1,n+1,1): sum_a=sum_a*iprint(sum_a)temp=sum_asum_b=0while temp // 10 !=0: sum_b=sum_b+temp%10 temp=temp//10sum_b=sum_b+tempprint(sum_b)count=0if sum_a==0: print('0')else: while sum_a%10==0: count+=1 sum_a=sum_a//10 print(count) 第一題測資 第二題 1234567891011121314151617def leap_month_sum_day(month,year): # 回傳該月份累積天數 leap_year_day_add=[0,31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366] not_leap_year_day_add=[0,31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365] if leap_check(year): return leap_year_day_add[month-1] else: return not_leap_year_day_add[month-1]def leap_check(year): if (year%400==0) or (year%4==0 and year%100!=0): return 1 else: return 0date=list(map(int,input().split('/')))sum_day=leap_month_sum_day(date[1],date[0])+date[2]print(sum_day) 第二題測資 第三題 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354#6 7 8 9 8 7 8 9 8 9 7 8 9 5 9 8 7 8 7 8 6 7 8 9 3 9 8 7 8 7 7 8 9 8 9 8 9 7 8 9 6 7 8 7 8 7 9 8 9 2 7 8 9 8 9 8 9 7 5 3 5 6 7 2 5 3 9 4 6 4 7 8 9 6 8 7 8 9 7 8 7 4 4 2 5 3 8 7 5 6 4 5 6 1 6 5 7 8 7# 前置作業 from math import sqrtthe_list=list(map(int,input().split()))the_list.sort()length=len(the_list)print(the_list)# 平均 averge=0temp=0for i in range (0,length,1): temp=temp+the_list[i]averge=temp/lengthprint(averge)# 中位數 if length%2==0: print((the_list[length//2-1]+the_list[length//2])/2)else: print(the_list[length//2])# 眾數 ans = []count = []ans.append(the_list[0])count.append(0)j = 0count[j] += 1max_num = 0for i in range(1, length, 1): if the_list[i] == the_list[i - 1]: count[j] += 1 else: ans.append(the_list[i]) j += 1 count.append(0) count[j] += 1for i in range(0,len(count),1): if max_num &lt; count[i]: max_num = count[i]for i in range(0, j + 1, 1): if count[i] == max_num: print(ans[i],end='')print(&quot;&quot;)# 換行 # 標準差 sum_square=0for i in range(0,length,1): sum_square=sum_square+(the_list[i]-averge)**2sum_square=sum_square/lengthsum_square=sqrt(sum_square)print(sum_square) 第三題測資","link":"/2023/04/17/midtest_hide/"},{"title":"b964. 第 1 題 成績指標","text":"一次考試中，於所有及格學生中獲取最低分數者最為幸運，反之，於所有不及格同學中，獲取最高分數者，可以說是最為不幸，而此二種分數，可以視為成績指標。 請你設計一支程式，讀入全班成績(人數不固定)，請對所有分數進行排序，並分別找出不及格中最高分數，以及及格中最低分數。 當找不到最低及格分數，表示對於本次考試而言，這是一個不幸之班級，此時請你印出「worst case」；反之，當找不到最高不及格分數時，請你印出「best case」。 (註：假設及格分數為 60)。 輸入說明 第一行輸入學生人數，第二行為各學生分數 (0~100 間)，分數與分數之間以一個空白間格。 每一筆測資的學生人數為 1~20 的整數。 輸出說明 每筆測資輸出三行。 第一行由小而大印出所有成績，兩數字之間以一個空白間格，最後一個數字後無空白；第二行印出最高不及格分數，如果全數及格時，於此行印出 best case ；第三行印出最低及格分數，如果全數不及格時，於此行印出 worst case 。 12345678910111213141516171819202122232425262728293031# 輸入學生數量student = int(input())# 輸入各學生的成績，並將它們轉換為整數列表grade_list = list(map(int, input().split()))# 對成績列表進行排序grade_list.sort()# 將排序後的成績列表輸出print(*grade_list)# 檢查列表中最低分數是否大於 60 分if grade_list[0] &gt; 60: # 如果最低分數大於 60 分，輸出 &quot;best case&quot; 和最低分數 print(&quot;best case&quot;) print(grade_list[0])# 檢查列表中最高分數是否小於 60 分elif grade_list[student - 1] &lt; 60: # 如果最高分數小於 60 分，輸出最高分數和 &quot;worst case&quot; print(grade_list[student - 1]) print(&quot;worst case&quot;)else: i = 0 # 尋找小於 60 中最高的數字 while grade_list[i] &lt; 60: # 將當前成績賦值給變數 temp temp = grade_list[i] i += 1 # 輸出最後一個小於 60 分的成績和下一個成績 grade_list[i] print(temp) print(grade_list[i]) b964. 第 1 題 成績指標","link":"/2023/04/12/b964_hide/"},{"title":"大量的 markdown 語法","text":"This is intended as a quick reference and showcase. For more complete info, see John Gruber’s original spec and the Github-flavored Markdown info page. This cheatsheet is specifically Markdown Here’s version of Github-flavored Markdown. This differs slightly in styling and syntax from what Github uses, so what you see below might vary a little from what you get in a Markdown Here email, but it should be pretty close. GIF 動圖指令表達式 1&lt;center&gt;&lt;img src=&quot;/images/image0.gif&quot; width = &quot;&quot; height = &quot;&quot;&gt;&lt;/center&gt; Table of ContentsHeadersEmphasisListsLinksImagesCode and Syntax HighlightingBlockquotesInline HTMLHorizontal RuleLine Breaks ## Headers 1234567891011121314# H1## H2### H3#### H4##### H5###### H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1======Alt-H2------ H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style: Alt-H1Alt-H2 ## Emphasis 12345Emphasis, aka italics, with *asterisks* or _underscores_.Strong emphasis, aka bold, with **asterisks** or __underscores__.Combined emphasis with **asterisks and _underscores_**. Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. ## Lists 1234567891011121. First ordered list item2. Another item * Unordered sub-list. 1. Actual numbers don't matter, just that it's a number 1. Ordered sub-list4. And another item. Some text that should be aligned with the above item.* Unordered list can use asterisks- Or minuses+ Or pluses First ordered list item Another item Unordered sub-list. Actual numbers don’t matter, just that it’s a number Ordered sub-list And another item. Some text that should be aligned with the above item. Unordered list can use asterisks Or minuses Or pluses ## Links There are two ways to create links. 12345678910111213[I'm an inline-style link](https://www.google.com)[I'm a reference-style link][Arbitrary case-insensitive reference text][You can use numbers for reference-style link definitions][1]Or leave it empty and use the [link text itself][]Some text to show that the reference links can follow later.[arbitrary case-insensitive reference text]: https://www.mozilla.org[1]: http://slashdot.org[link text itself]: http://www.reddit.com I’m an inline-style link I’m a reference-style link You can use numbers for reference-style link definitions Or leave it empty and use the link text itself Some text to show that the reference links can follow later. ## Images 123456789Here's our logo (hover to see the title text):Inline-style: ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 1&quot;)Reference-style: ![alt text][logo][logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 2&quot; Here’s our logo (hover to see the title text): Inline-style: Reference-style: ## Code and Syntax Highlighting Code blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers – like Github’s and Markdown Here – support syntax highlighting. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page. 1Inline `code` has `back-ticks around` it. Inline code has back-ticks around it. Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting. 123```javascriptvar s = &quot;JavaScript syntax highlighting&quot;;alert(s); 12s = &quot;Python syntax highlighting&quot;print s 12No language indicated, so no syntax highlighting. But let's throw in a &lt;b&gt;tag&lt;/b&gt;. 1234```javascriptvar s = &quot;JavaScript syntax highlighting&quot;;alert(s); 12s = &quot;Python syntax highlighting&quot;print s 12No language indicated, so no syntax highlighting in Markdown Here (varies on Github). But let's throw in a &lt;b&gt;tag&lt;/b&gt;. (Github Wiki pages don’t seem to support syntax highlighting, so the above won’t be colourful (the strings are not red, for example). Try it out in a Markdown Here email or a Github Markdown README or Github Issue – you can preview a new Issue without submitting it.) Again, to see what languages are available for highlighting, and how to write those language names, see the highlight.js demo page. ## Blockquotes 123456&gt; Blockquotes are very handy in email to emulate reply text.&gt; This line is part of the same quote.Quote break.&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. Blockquotes are very handy in email to emulate reply text.This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. ## Inline HTML You can also use raw HTML in your Markdown, and it’ll mostly work pretty well. Here are a couple of common examples: 12345678910111213141516171819202122232425262728&lt;dl&gt; &lt;dt&gt;Definition list&lt;/dt&gt; &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt; &lt;dt&gt;Markdown in HTML&lt;/dt&gt; &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;&lt;/dl&gt;&lt;table&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;Tables&lt;/th&gt; &lt;th&gt;Are&lt;/th&gt; &lt;th&gt;Cool&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Zebra&lt;/th&gt; &lt;td&gt;Stripes&lt;/td&gt; &lt;td&gt;Are&lt;/td&gt; &lt;td&gt;Pretty&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Here&lt;/th&gt; &lt;td&gt;Is&lt;/td&gt; &lt;td&gt;Another&lt;/td&gt; &lt;td&gt;Row&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags. Tables Are Cool Zebra Stripes Are Pretty Here Is Another Row Github-flavored Markdown supports a special table syntax, but Markdown Here does not support it yet. There’s an issue for it. ## Horizontal Rule 12345678910111213Three or more...---Hyphens***Asterisks___Underscores Three or more… Hyphens Asterisks Underscores ## Line Breaks My basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once, then hit it twice, see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend. Here are some things to try out: 1234567With only a single newline, this line andthis line will be a *single line*.But this one is separated by two newlines and so will be a *separate paragraph*.This line has two spaces at the end (hard for you to see, but trust me!). So this is a separate line in the *same paragraph*. With only a single newline, this line andthis line will be a single line. But this one is separated by two newlines and so will be a separate paragraph. This line has two spaces at the end (hard for you to see, but trust me!).So this is a separate line in the same paragraph.","link":"/2023/03/19/markdown/"},{"title":"TTT","text":"Download Button .download-button { font-size: 1.2em; padding: 10px 20px; color: white; background-color: #4CAF50; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease; } .download-button:hover {background-color: #45a049;} Download function downloadFile() {window.open('/doc_download/a.txt', '_blank'); }","link":"/2023/05/06/test_hide/"},{"title":"Zerojudge 高中生解題系統","text":"zerojudge 程式碼目錄 a054. 電話客服中心 a015. 矩陣的翻轉a005. Eva 的回家作業a006. 一元二次方程式a010. 因數分解a040. 阿姆斯壯數b964. 第 1 題 成績指標b374. [福州 19 中] 众数 a263. 日期差幾天 大數據期中考b367. 翻轉世界a054. 電話客服中心(dictionary 解法)e272. gcd(Fm,Fn)c087. 00412 - Pia044. 空間切割b050. 1. 集合運算a445. 新手訓練系列 - 我的朋友很少","link":"/2023/04/10/zerojudge/"},{"title":"委託項目","text":"簡易封面 照片畫值補強 影片畫值補強 影片補幀 AI 繪圖 影片剪輯 簡易封面 封面（Twitter、Facebook、YouTube），請提供素材，我會幫您做簡易的編排。委託一小時內完成，可以邊做您邊看（用 Discord 直播分享，哪裡想修改馬上講）。最終成品最多修改兩次，避免一來一回浪費彼此的時間。如果您會用 Photoshop，就不要來委託我，我只接懶得做跟沒時間做的。 價格: 一張圖 200 元(1920 x 1080 或 1080 x 1080) 作品觀看 照片畫值補強 請您提供照片（動漫圖、人物圖、風景圖、遊戲圖），我可以幫您增強畫值（AI 銳化）。可以提供 4 版不同的增強效果做選擇。參數內容由我來優化，總共調參兩次，最多可以出 8 張圖給您。 價格: 一張圖 10 元 影片畫值補強 提供影片（動漫、遊戲影片），幫您從 1080P 補到 4K。過程使用雲端硬碟作為傳輸，2 天候刪除雲端檔案，不保留。如影片過於模糊，造成效果不好請自行承擔。可提供 5 秒試補。 價格:1 分鐘 50 元，未滿 1 分鐘以 1 分鐘計算。影片畫值補強 + 補幀，總價格打 7 折。 影片補幀 提供影片補幀，不做任何調整。如動漫請自行抽幀，再提供給我。 價格:1 分鐘補 30 幀 25 元、60 幀 40 元 例:10 分鐘 60 幀影片 -&gt;120 幀 (400 元) 影片畫值補強 + 補幀，總價格打 7 折。 AI 繪圖 可由我決定出最佳的 model 做運算，也可以由 CIVIAI 做選擇。算出的照片禁止作營利使用，所有版權問題皆與我無關。可畫 NSFW 圖，大量委託可議價。 價格:20 次迭代 +540x540 1 張 10 元 迭代翻倍:+5/per畫質 1080x1080:+5/per 影片剪輯 目前只接認識的，由於課業繁重，沒什麼時間剪片，真的想委託再私訊我 Discord Discord: 微風 #8410","link":"/2023/04/14/%E5%A7%94%E8%A8%97/"},{"title":"長期合作實況主","text":"&nbsp 巨龍阿秉 YT: https://www.youtube.com/channel/UCVleW5CQMvlZ--jrkHRvqwg 巨龍阿秉 Twitch:https://www.twitch.tv/blueguy861113 「女裝斜咖」 12 你好，我是秉秉的好兄弟，他現在勾勾過了我需要錢請他吃飯，還差 50000 我就可以請他吃滿漢大餐 你斗內我我保證一定讓你和他女裝合照。 火爆蟲蟲 YT: https://www.youtube.com/channel/UC6t3hvEa2uPI_0-V95jnGEA 火爆蟲蟲 Twitch:https://www.twitch.tv/152babe 「正妹一個」 &nbsp 紋紋 YT: https://www.youtube.com/channel/UCMyxOWKfTBwsXaoav4gEwHA 紋紋 Twitch:https://www.twitch.tv/wen620 「原本以為是一個正妹實況主，結果還是斜咖一枚，為了滿足自己做了一個大奶的 V 皮」 合作過的實況主 草草 YT:https://www.youtube.com/channel/UCr3LuMjlSfMx_nynxwOCwkA 「妹子，為什麼我認識的都是斜咖」 阿萬 YT:https://www.youtube.com/channel/UCda8AqSoaEG1bSLfnLI6Bqw 「原本以為是正經的實況主，結果還是斜咖一枚」 1234567 我們摯愛的阿萬 於西元 2023 年 1 月 9 日，悄悄的離開這個實況圈 我們痛徹心扉，就僅僅一眨眼的時間，天人永隔 阿萬安祥的走完了一年多的實況人生旅程 他彷彿在沉睡中做了一個美夢 夢醒了，留下陪伴我們成長過程中的點點滴滴 留下我們永恆的追思與感恩 &nbsp Ko0416 YT:https://www.youtube.com/@Koko0416 「禿老闆」 黑皮 YT:https://youtube.com/user/specialboil ｢我的第一個剪輯老闆，現在已經不知道跑去哪了｣(開玩笑的，他跑去經營一個 按摩工作室 ) 安醬 YT:https://www.youtube.com/channel/UCIHbuwTjB9ItyR8Bfn5nl-A/videos 「一個玩 GTA 的女實況主」","link":"/2023/03/19/%E5%AF%A6%E6%B3%81%E4%B8%BB/"},{"title":"簡易封面","text":".imgur-image { max-width: 30%; height: auto; } 實況主 野熊 連動製圖","link":"/2023/04/14/%E5%A7%94%E8%A8%97_%E7%B0%A1%E6%98%93%E5%B0%81%E9%9D%A2_hide/"},{"title":"電機營","text":".outer-gray-bg { background-color: #f2f2f2; border: 1px solid #ddd; border-radius: 5px; margin: 10px 0; padding: 10px; } .gray-bg { margin: 0; padding: 0; } .gray-bg p, .gray-bg ul { margin: 0; padding: 0; } .no-bullets {list-style-type: none;} .no-bullets li {padding-left: 20px;} .gray-bg:nth-child(4) li:nth-child(-n+3) {color: red;} .outer-lightblue-bg { background-color: #e0f7ff; border: 1px solid #b3daff; border-radius: 10px; margin: 10px 0; padding: 10px; } .lightblue-bg { margin: 0; padding: 0; } .lightblue-bg p, .lightblue-bg ul { margin: 0; padding: 0; } $(document).ready(function() {$(\".photo-container\").each(function() {var container = $(this); var photos = container.find(\".photo\"); var currentIndex = 0; function showPhoto(index) {photos.hide(); photos.eq(index).show(); container.find(\".image-counter\").text(\"第\" + (index + 1) + \"張\"); } showPhoto(currentIndex); container.find(\".prev-button\").click(function() { currentIndex--; if (currentIndex < 0) {currentIndex = photos.length - 1;} showPhoto(currentIndex); }); container.find(\".next-button\").click(function() { currentIndex++; if (currentIndex>= photos.length) {currentIndex = 0;} showPhoto(currentIndex); }); }); }); 如果你已經看到這裡了, 就代表你有打算接任器攝股或者已經是器攝股的股長或股員了, 那接下來的東西我相信一定對你有幫助 1. 組織2. 磨合3. 招工4. 面試5. 預算6. 基本技巧練習7. 培訓營8. 精進9. 驗收10. 上工11. 額外資源 組織 「在所有的事情開始前, 你要了解一件事情, 這是一個大家的營隊, 並不是由你一個人所舉辦的, 所以開始的前題是你要先找到你可以信任的夥伴!!」 1. 簡單介紹一下電機營各部門的組成: 總籌股 、 財務股 、 活動股 、 美輔股 、 課程股 、 器攝股 、 生機股 總籌股(2 人): 負責處理營隊對外大大小小事務 財務股: 負責審理營隊所有預算, 由系學會財務擔任 活動股(2~3 人): 負責所有活動的表演內容 美輔股(2~3 人): 負責活動內所需的所有美工與營隊期間擔任隊輔與部分表演工作 課程股(2~3 人): 負責於營隊期間設計與電機有關的課程(大課小課), 在閒暇時間輔助隊輔照顧小孩 器攝股(2~3 人): 熟練使用所有電機營所需器材, 拍攝錄影紀錄營隊過程, 音響器材使用, 產生早報與回顧片 生機股(2~3 人): 做為活動期間的機動人員, 訂購工人與學員的餐食, 在閒暇時間輔助隊輔照顧小孩 2. 由於我是器攝股的, 所以以下內容只適用於器攝 人數通常為兩人, 三個人也可以, 由一個人進行指揮, 另一個輔助。 股長特質建議: 股長一號 or 股長二號 = 有腦袋 + 有空閒時間 + 有體力 + 會吵架(預算會所需技能)+ 熟練使用任何剪輯軟體 + 熟練相機用法 + 有錢 + 有錢到可以幫系學會墊快五萬墊半年 建議股長們一定要有一個人平常很閒, 不然有急事會很難處理 建議系學會場器部要有一個人擔任電機營器攝, 否則在租借與放置器材方面會很麻煩(由於偷用舊倉庫被抓到, 所以之後只能放新倉庫), 系上鑰匙共有三把(系學會長 + 正副場器) 磨合 「與你的同學一起把整個活動的行程規劃好, 請大家達成共識, 籌畫接下來的招工說明會與面試會議」 1. 與總籌副籌溝通, 向學弟妹先簡易宣達招工項目, 擬定電機營活動規劃(暫定)2. 器攝必須與各個部門養成良好的默契, 因為器攝是一個需要配合各個部門工作的股 招工 「畫餅」 可以想像, 但絕不是欺騙 1. 面對工作內容必須誠實2. 應該詳細講解攝器股, 而不是讓學弟妹猜測工作內容3. 講解詳細的練習流程, 練習時長與頻率4. 講解器攝股在電機營上所擔任的角色5. 告訴學生活動舉辦的暫定日期, 確保寒暑假可以待在台北進行營隊與培訓(需申請寒暑宿, 除非家裡住在台北, 可以方便通勤, 上營期間離開活動會場約為晚上 11、12 點, 請確保有交通工具可以回家, 否則一律強迫住宿) 上一張 下一張 面試 「都那麼辛苦擔任股長了，你不會想跟一群臭棒子工作吧 –chatgpt 沒有說過」 1. 面試通常會有兩個時間段, 如果可以的話, 盡量把第一志願都排在同一個時間段2. 要在面試前把所有人列出來, 並用 excel 整理出各個股的第一志願人數3. 工人的人數分布應該是各 1/4, 器攝和課程 &lt;= 活動和美輔(理想值), 但志願填寫應該是器攝 &gt; 課程活動 &gt; 美輔4. 面試過程建議要錄音, 推薦用錄影片的, 因為錄音到後來會忘記到底是誰5. 搶人大作戰: 與其他股協調開會, 通常器攝最多人, 所以器攝可以先挑選第一志願為器攝的人選, 挑選人數的 1/4, 可以視其他股的人數做刪減6. 搶完人等總籌確認沒問題後, 開始拉群組, 凝聚向心力, 可以先把一些練習的東西發上去 面試問題(紅色為必問) 1. 首先 1 分鐘自我介紹, 快速讓在場的所有幹部認識面試者 2. 依據志願順序面試, 器攝只面一二志願, 除非很缺勞力(需要比較壯碩的學弟 or 學妹) 3. 器攝面試官首先自我介紹, 講解一下接下來的面試問題(例如: 我接下來會問你幾個簡單的問題, 用輕鬆的方式回答我就好, 最後會有一個加分的小互動, 不要緊張) 4. 面試問題:(問完必問問題後, 下面隨便挑一個喜歡的問就好, 主要就是讓股長認識這個面試者, 不要浪費太多時間面試) a. 你知道器攝股是在做甚麼的嗎? 你有參加招工說明會嗎?(對回答進行糾正與補充, 重新確認是否與面試者所想像的器攝相同) b. 你有任何與上述所講到的工作相關的經驗嗎(例如高中社團拍照 or 攝影)? 沒有也沒關係 c. 你有加入那些社團 or 友會 or 球隊嗎? 或者平常有在接家教打工?(確認忙碌程度) d.(b 回答:True)在拍攝活動期間，你知道怎麼調整相機的光圈、快門、ISO 等參數嗎？還是你都是用手機拍(活動期間需要使用單眼相機) e.(b 回答:True)你有使用過手機穩定器的經驗嗎?(倉庫有手機穩定器) f.(b 回答:True)你曾經使用過哪些攝影器材？ g.(情境題)如果今天上營期間, 你拍出來的照片突然太暗不然就是容易模糊, 那麼你會怎麼處理?(請教學長姊? 詢問同學? 換台相機? 確認相機參數)(考驗問題處理能力) h.(情境題)如果你的同股的同學在快上營的前幾天突然確診, 那麼你身為他同股的 partner, 你會怎麼處理(趕快找股長確認工作內容? 分配工作內容? 詢問確診同學教接問題? 提醒大家注意身體健康)(考驗積極性) i.(情境題)如果明天是很重要的驗收環節, 但你有一個學校的報告沒還做完, 如果參加驗收就繳交不了報告, 你該如何衡量(考驗電機營的時間分配觀念與態度) j.(情境題)如果上營期間有學員不想被拍照但並沒有直接講述, 只是會逃避鏡頭, 你該怎麼處理?(考驗溝通能力)(請隊輔幫忙引導大家一起拍照? 從遠處偷偷拍照? 詢問學員為何排斥拍照) k.(情境題)如果上營期間拍照拍到一半相機沒電, 你會怎麼處理, 已知有另一顆充飽的電池在休息區, 但休息區距離活動區域有一小段距離?(考驗問題處理能力)(此題有正解: 請有空的「器攝」股員幫忙回去拿電池自己則先用手機接續拍照) l.(情境題)如果上營期間其中一個音箱突然出現雜音, 你該怎麼處理?(考驗問題處理能力)(此題有正解: 關閉其中一個音箱, 單獨使用好的音箱, 並派人檢查器材) m.(情境題)如果上營期間表演者講話講到一半麥克風沒電, 請問該怎麼辦(考驗問題處理能力)(此題有正解: 即興加入劇情, 透過劇情以道具的方式替換演出者的麥克風) n.(情境題)如果上營期間你的 partner 睡過頭 (並不是住宿舍) 你該怎麼辦?(考驗問題處理能力)(趕快打電話叫醒他? 詢問股長並分配工未到者工作?) 5. 有趣小遊戲:(挑一個玩一下, 歷屆傳統, 如果不玩也不會怎樣, 你爽就好) 建議可以融入器攝相關技巧, 例如: 對講機使用(重複講話, 聽到請回答等等)、如何把電線貼好(包線)、如何開倉庫的門(實際技巧請自行請教學長姊, 密技不外傳)、準備一台電腦播音樂, 叫學生幫我把音源線給我(正解：先觀音樂, 然後關音箱電源, 然後拔音源線；錯誤：直接關音箱然後拔線、直接拔線 勤勞程度>顏值>性別 預算 「直銷培訓企劃」 1. 開始籌列電機營預算表, 總共分成「培訓營預算會」「培訓營結算會」「正式營預算會」「正式營結算會」2. 培訓營為獨立於電機營之活動, 所以預算與結算要獨立開會, 練習如何開預算會 3. 請將培訓營視為簡易版之正式營, 所需物品請參考 培訓營 當天流程安排 4. 營隊期間所需的消耗品皆在營隊預算會開立項目, 大型貴重(如: 相機、投影機、MacBook Pro、Mixer、iPhone 14 Pro Max、大砲鏡頭、記憶卡、音箱、閃光燈、空拍機、對講機、按摩椅、50 吋大電視) 請在年度預算會做申請 5. 所有所需項目皆需要在預算會前確認好「 數量 」與「 金額 」, 因為必須統計預算訂定營隊價格, 避免活動虧錢, 緊急物品(如: 電池突然用完, 音源線突然不能用, 電光膠布不夠) 則可在所需時向財務部報備, 口頭得到會代會同意後, 即可購買6. 網購需考量運費成本, 運費必須獨立開立在預算內 7. 某些網購平台打統編需加收 5% 金額, 請在開立預算前是先確認可否開立「發票 / 收據」 8. 所有開立之預算皆須要打統編，無法打統編之物品，無法請款，需自行吸收(如: 自行前往購買而產生的交通成本) 9. 師大統編:03735202 消耗品:(建議申請量, 可根據練習頻率調整) 電池: 培訓營與正式營的預算會分開開立 =>120 顆(半天換一次 / 一支麥克風兩顆 / 培訓營兩支正式營四支) 布膠帶: 培訓 2 捲、正式(需考量練習使用量 + 一驗 + 二驗 + 行前 + 內驗 + 正式)10 捲 電光膠布: 培訓 5 捲、正式 18 捲 鹵素燈管: 地燈台座 *1.5 倍 購買:金興發 、pchome、 蝦皮 、 今華電子(光華商場 - 鹵素燈管) 器材: Mixer 混音盤: 只有行前營 + 正式營需要 (一台)(開在正式營預算)-&gt; 擎創國際有限公司 X 國聯燈光音響視訊 無線麥克風: 只有行前營 + 正式營需要 (1 對 4 無線接收器一台)(開在正式營預算)-&gt; 擎創國際有限公司 X 國聯燈光音響視訊 備注 1: 老闆討厭白癡, 請不要當白痴, 你會被罵到哭 備注 2: 老闆每次都不會記得上次開價多少, 每次價格都會不同, 連我當下要刷卡的金額都會變, 通常會更低, 記得收好收據回報會代 備注 3: 須提醒老闆要打統編, 打統編為所有報價價格 +5%, 預算會時請確認價格是否為稅後價格 預算表範例 基本技巧練習 「就算是笨蛋也要給我教會他」 1. 四大技能: 剪片、拍照、配樂(習慣叫配器)、器材 2. 在培訓營前會有 (4~6 次的股練時間; 二到三個禮拜), 時間分配為 -> 剪片 (1 天)+ 拍照(1 天)+ 器材(2 天){+ 驗收剪片練習(1 天)+ 錄影練習(1 天)}-> 可有可無 3. 時間不夠的話, 驗收剪片改成股長線上驗收錄影改進心得, 貼給學員自己看, 錄影練習跟拍照一起 4. 建議剪片可以第一個禮拜先教, 教完後在培訓營前請大家剪出一支 3~4 分鐘的回顧片(1 首歌), 時間充足就排一次股練大家一起看並講解優缺點, 股練時間不夠就照上面的做, 請學生衡量剪片所需時長(正常時間應為 6 個小時內 - 包含挑素材與剪輯, 除非他弄得很精緻) 5. 驗收完剪片, 請跟另一個股長討論, 決定培訓營剪片者, 記得告訴股員此選擇並不是最終決定 剪片 ．剪輯軟體推薦:adobe premiere pro、DaVinci Resolve、剪映 ．影片導出格式:1920*1080_VBR:12mbps~10mbps_最佳化選染_h.264_mp4 ．教學影片請參考 額外資源 ．請學生截圖電腦工作管理員 CPU+ 記憶體 + 顯卡, 確認有沒有學生剪不了片的, 電腦很爛的要考慮之後就不要讓他剪片了 ．禁止使用奇怪的音樂, 亂剪的, 沒用心剪的,直接踢除電機營。 教學 ppt 上一張 下一張 ppt 內容提及影片:page49: 選課影片、page51: 第三屆電機營早報 拍照 and 錄影 ．系學會相機:nikon_z50(+rode 有線麥克風)、canon EOS ．後製軟體:adobe photoshop 2021、adobe lightroom 2021 ．拍攝格式:jpg+raw(需要調色再使用 RAW 檔) ．錄影格式:1920*1080p 60 ．有線上教學影片, 請參考底下額外資源中的【拍攝教學】 拍照教學 ppt 上一張 下一張 ppt 內容提及影片:馮楷宸學長 IG、page8:Inside a Camera at 10,000fps - The Slow Mo Guys 錄影教學 ppt 上一張 下一張 ppt 內容提及影片:page10: 快門太慢、page10: 快門太快 + 快門適中、page13: 穩定性很重要、page15: 機內轉場、page20: 構圖 配器 ．使用軟體:Virtual DJ(DJ 台)、adobe audition(調整聲音大小) ．熟悉每首歌曲的絕對音量 ．記得先裁切音源, 不要用哪種 youtuber 100 音效包, 如果不小心播錯你會被幹到起飛 ．key point: 配樂要淡入淡出, 音效直出。記得確認電腦的音源輸出是否為喇叭 器材 ．地燈: 倉庫有四個鹵素地燈(黃光)+ 兩個 LED(白光), 晚會表演使用, 要對稱, 一個延長線最多接三個地燈(建議直接購買可變 LED 地燈, 早該換了, 白癡會代) ．spotlight: 跟學校做租借, 不用錢, 平時可以借來練習, 只有行前營與正式營需要, 驗收用簡易手電筒代替即可。練習如何架設聚光燈(單人架設) ．布膠帶、電光膠布: 練習快速貼線, 盡量不要走曲線, 請走直角, 長直線直接用布膠帶貼比較快, 小地方用電光膠布, 貼線記得包下去, 線材才不會晃動, 手撕電光膠布跟布膠帶要練, 上營沒人在拿剪刀的, 很蠢 ．相機腳架: 練習從袋子中拿出來快速拆裝, 快速收納 ．投影機: 練習快速架設, 調平, 梯形修正 ．音箱與麥克風搭配: 調整 mic 大小聲, 背景音樂與人聲比例, 串連兩台 mipro 音箱(注意音箱散熱與電源是否正確接上) ．Mixer: 就混音盤, 自己在行前營時摸摸看怎麼用, 不會用就去 google ．一對四無線麥克風: 表演者會有小蜜蜂接到口袋的發射器，音控台會有一台一收四的大型接收器，可以轉出四路 XLR（記得跟器材老闆拿 2XLRx2，不要問，問就是 教訓），請接到 mixer 上加上電腦音效混出一軌接音箱。 師大學校系統租借 上一張 下一張 培訓營 「我學長ㄋ！！」 1. 培訓營活動會在股練開始後的 2~3 個禮拜後, 通常會排在禮拜六, 請提早告訴股員把那天空閒下來, 如果沒來的話有 50% 機率直接被踢掉電機營2. 培訓營的目的就是讓學員體驗前三周密集訓練的結果, 請好好把所學的東西發揮出來3. 培訓營行程分為早上下午晚上, 早上是由學長姊們先進行技能大地(1.5hr 左右), 然後由歷屆學長姊來心理喊話與講解電機營意義(看演講); 下午為自籌時間, 利用下午的 4~5 個小時, 籌備晚上的活動規劃; 晚上為活動執行4. 歷屆培訓營地點通常在誠正地下室, 場地蠻大的, 只是網路很爛, 建議剪片者可以去樓上的桌子那邊剪片5. 中餐晚餐會由生機股訂定, 當天收錢6. 股長請在培訓營前, 把工作安排的分工表列舉出來7. 技能大地 ．由各股股長主辦活動, 意義在於讓所有股員都可以大概了解這個股在做什麼 ．所有股員將會平分成四個小隊, 每個隊伍皆有一定數量的各股股員, 輪流體驗每個股的活動, 活動內容需要被電機營主題包裝 ．第五屆活動內容: 體驗布置地燈, 貼電光膠布, 由器攝股股員帶領同組同學一邊布置場地一邊抓出內鬼 ．包裝: 歡迎各位來到偵探事務所, 各位見習偵探, 最近事務所有收到一個小道消息, 待會晚點的表演活動將會有人遇害, 殺手會現身並刺殺表演者, 所以需要各位幫我找出幕後兇手跟確保活動的正常進行。接下來各位將會化身為便衣偵探, 假裝成工作人員進去會場布置設備, 只要完成設備布置後, 就可以避免這條命案的發生。另一個小道消息是, 在你們偵探中, 有一個間諜是跟殺手串通好的, 他會在布置的過程中干擾你們架設器材, 跟故意擺放錯設備, 你們必須矯正他的錯誤, 且在活動最後投票出誰是間諜, 待會我會教你們正確的擺放方式跟地貼的正確貼法, 如果在過程中有不清楚的地方, 可以詢問你們隊伍裡面的器攝股員, 但請注意, 他有可能是內鬼呦！ ．活動內容時長:17 分鐘活動 +3 分鐘移動換場 活動細流範例 自籌活動 ．在中餐吃完飯後, 大約會有 4 個小時的自籌活動 - 小破(美輔)、大破(美輔)、開場劇(活動)、小課(課程)、遊戲(活動)、結尾串回顧片(活動) ． ． 精進 驗收 上工 額外資源 付費素材庫 Pikbest: 付費訂閱制, 我有買斷大概台幣 6000, 請我吃一次麥當勞我就讓你們用整個營期。主要內容是用在回顧片與早報中, 早報沒有素材庫會有點難剪, 自行考慮。 免費轉場插件 for premiere pro 【通用教學 - 影片碼率】 【通用教學 - 賀仁回顧片講評 + 調色教學】 【通用教學 - 回顧片練習要點 + 複習 pr 操作】 【通用教學 - 簡易轉場】 【通用教學 - 檔案分類 + 簡易調色】 【PR 教學 -premiere 基礎教學】 【PR 教學 -flow frames 插幀和 premiere 專案檔打包技巧】 【PR/AE 教學 - 影片去被】 【成品欣賞 - 第五屆電機營早報 1、2、3-- 馮柏勳】 【成品欣賞 - 第五屆電機營回顧片 -- 吳祐安】 【成品欣賞 - 第五屆電機培訓營回顧片 -- 楊賀仁】 【拍攝教學 - 理論講解(講師: 馮楷宸)】 【拍攝教學 - 實例講解(講師: 馮楷宸)】","link":"/2023/04/19/%E9%9B%BB%E6%A9%9F%E7%87%9F/"},{"title":"Computer","text":"body { font-family: Arial, sans-serif; color: #333; background-color: #eee; margin: 0; padding: 0; } h1 { text-align: center; font-size: 36px; margin-top: 50px; } .container { margin: 0 auto; max-width: 800px; padding: 20px; background-color: #fff; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); /* 加上陰影效果 */ } h2 { font-size: 24px; margin-top: 40px; } th {background-color: #f2f2f2;} table { table-layout: fixed; width: 100%; border-collapse: collapse; } th, td { padding: 10px; border: 1px solid black; text-align: center; } th:first-child {width: 30%;} td:nth-child(2) {width: 70%;} 我的桌機 CPU 品牌 Intel 型號 i7-11700F 記憶體 品牌 美光普條 容量 32GB (8GBx4) 顯卡 品牌 EVGA 型號 3060 主機板 品牌 AORUS 型號 B560M PRO AX 電源 品牌 EVGA 型號 650w 儲存裝置 固態硬碟 PNY CS3140 2TB 固態硬碟 美光 P2 512GB 機械硬碟 WD 金標 1T 企業碟 螢幕 型號 Philips 272M8(1080p 144Hz) 型號 便攜式螢幕 (2K 60Hz) 麥克風 型號 圓剛 AM310 鍵盤 型號 MSI VIGOR GK50 Low Profile(矮青軸 104 配列) 型號 達爾優 ek868(凱華矮紅軸 68 配列) 型號 skyloong 拾光龍白日夢 - 夢聖誕 (佳達隆短紅軸 68 配列) 滑鼠 型號 羅技 MX master3 耳機 型號 Sony WH-1000XM4 我的筆電 筆電型號 Lenovo Thinkbook 14+ 2023 CPU i5-13500H 記憶體 32GB 固態硬碟 512GB","link":"/2023/03/25/%E9%9B%BB%E8%85%A6%E9%85%8D%E7%BD%AE/"},{"title":"第一題測資","text":"123456789101112131415161718192021{&quot;input&quot;: [10], &quot;output&quot;: [3628800, 27, 2]}{&quot;input&quot;: [33], &quot;output&quot;: [8683317618811886495518194401280000000, 144, 7]}{&quot;input&quot;: [44], &quot;output&quot;: [2658271574788448768043625811014615890319638528000000000, 216, 9]}{&quot;input&quot;: [29], &quot;output&quot;: [8841761993739701954543616000000, 126, 6]}{&quot;input&quot;: [32], &quot;output&quot;: [263130836933693530167218012160000000, 108, 7]}{&quot;input&quot;: [23], &quot;output&quot;: [25852016738884976640000, 99, 4]}{&quot;input&quot;: [14], &quot;output&quot;: [87178291200, 45, 2]}{&quot;input&quot;: [17], &quot;output&quot;: [355687428096000, 63, 3]}{&quot;input&quot;: [35], &quot;output&quot;: [10333147966386144929666651337523200000000, 144, 8]}{&quot;input&quot;: [27], &quot;output&quot;: [10888869450418352160768000000, 108, 6]}{&quot;input&quot;: [46], &quot;output&quot;: [5502622159812088949850305428800254892961651752960000000000, 216, 10]}{&quot;input&quot;: [5], &quot;output&quot;: [120, 3, 1]}{&quot;input&quot;: [4], &quot;output&quot;: [24, 6, 0]}{&quot;input&quot;: [16], &quot;output&quot;: [20922789888000, 63, 3]}{&quot;input&quot;: [34], &quot;output&quot;: [295232799039604140847618609643520000000, 144, 7]}{&quot;input&quot;: [39], &quot;output&quot;: [20397882081197443358640281739902897356800000000, 189, 8]}{&quot;input&quot;: [38], &quot;output&quot;: [523022617466601111760007224100074291200000000, 108, 8]}{&quot;input&quot;: [25], &quot;output&quot;: [15511210043330985984000000, 72, 6]}{&quot;input&quot;: [26], &quot;output&quot;: [403291461126605635584000000, 81, 6]}{&quot;input&quot;: [22], &quot;output&quot;: [1124000727777607680000, 72, 4]}{&quot;input&quot;: [0], &quot;output&quot;: [1, 1, 0]}","link":"/2023/04/24/%E5%A4%A7%E6%95%B8%E6%93%9A%E6%9C%9F%E4%B8%AD%E6%B8%AC%E8%B3%871_hide/"},{"title":"第二題測資","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950{&quot;input&quot;: [&quot;1182/02/22&quot;], &quot;output&quot;: [53]}{&quot;input&quot;: [&quot;2832/06/09&quot;], &quot;output&quot;: [161]}{&quot;input&quot;: [&quot;1649/03/09&quot;], &quot;output&quot;: [68]}{&quot;input&quot;: [&quot;9975/08/02&quot;], &quot;output&quot;: [214]}{&quot;input&quot;: [&quot;6868/09/14&quot;], &quot;output&quot;: [258]}{&quot;input&quot;: [&quot;431/10/10&quot;], &quot;output&quot;: [283]}{&quot;input&quot;: [&quot;8269/02/11&quot;], &quot;output&quot;: [42]}{&quot;input&quot;: [&quot;5472/12/08&quot;], &quot;output&quot;: [343]}{&quot;input&quot;: [&quot;3352/03/30&quot;], &quot;output&quot;: [90]}{&quot;input&quot;: [&quot;2974/06/11&quot;], &quot;output&quot;: [162]}{&quot;input&quot;: [&quot;1993/04/10&quot;], &quot;output&quot;: [100]}{&quot;input&quot;: [&quot;5714/01/23&quot;], &quot;output&quot;: [23]}{&quot;input&quot;: [&quot;9052/05/26&quot;], &quot;output&quot;: [147]}{&quot;input&quot;: [&quot;7648/02/03&quot;], &quot;output&quot;: [34]}{&quot;input&quot;: [&quot;7204/12/14&quot;], &quot;output&quot;: [349]}{&quot;input&quot;: [&quot;9942/12/31&quot;], &quot;output&quot;: [365]}{&quot;input&quot;: [&quot;2847/10/16&quot;], &quot;output&quot;: [289]}{&quot;input&quot;: [&quot;8546/03/24&quot;], &quot;output&quot;: [83]}{&quot;input&quot;: [&quot;6785/11/17&quot;], &quot;output&quot;: [321]}{&quot;input&quot;: [&quot;1896/12/10&quot;], &quot;output&quot;: [345]}{&quot;input&quot;: [&quot;7278/08/02&quot;], &quot;output&quot;: [214]}{&quot;input&quot;: [&quot;3303/12/13&quot;], &quot;output&quot;: [347]}{&quot;input&quot;: [&quot;5318/10/19&quot;], &quot;output&quot;: [292]}{&quot;input&quot;: [&quot;5031/11/26&quot;], &quot;output&quot;: [330]}{&quot;input&quot;: [&quot;3244/05/08&quot;], &quot;output&quot;: [129]}{&quot;input&quot;: [&quot;2849/11/09&quot;], &quot;output&quot;: [313]}{&quot;input&quot;: [&quot;6368/09/08&quot;], &quot;output&quot;: [252]}{&quot;input&quot;: [&quot;5304/09/25&quot;], &quot;output&quot;: [269]}{&quot;input&quot;: [&quot;5052/03/19&quot;], &quot;output&quot;: [79]}{&quot;input&quot;: [&quot;9036/12/14&quot;], &quot;output&quot;: [349]}{&quot;input&quot;: [&quot;1079/02/10&quot;], &quot;output&quot;: [41]}{&quot;input&quot;: [&quot;8469/12/18&quot;], &quot;output&quot;: [352]}{&quot;input&quot;: [&quot;344/08/16&quot;], &quot;output&quot;: [229]}{&quot;input&quot;: [&quot;2519/04/28&quot;], &quot;output&quot;: [118]}{&quot;input&quot;: [&quot;3785/03/08&quot;], &quot;output&quot;: [67]}{&quot;input&quot;: [&quot;8607/06/28&quot;], &quot;output&quot;: [179]}{&quot;input&quot;: [&quot;5709/04/12&quot;], &quot;output&quot;: [102]}{&quot;input&quot;: [&quot;3860/12/22&quot;], &quot;output&quot;: [357]}{&quot;input&quot;: [&quot;3214/11/22&quot;], &quot;output&quot;: [326]}{&quot;input&quot;: [&quot;4663/08/07&quot;], &quot;output&quot;: [219]}{&quot;input&quot;: [&quot;562/06/02&quot;], &quot;output&quot;: [153]}{&quot;input&quot;: [&quot;1948/09/02&quot;], &quot;output&quot;: [246]}{&quot;input&quot;: [&quot;9588/06/17&quot;], &quot;output&quot;: [169]}{&quot;input&quot;: [&quot;4833/07/30&quot;], &quot;output&quot;: [211]}{&quot;input&quot;: [&quot;7171/11/14&quot;], &quot;output&quot;: [318]}{&quot;input&quot;: [&quot;9860/05/30&quot;], &quot;output&quot;: [151]}{&quot;input&quot;: [&quot;3083/07/29&quot;], &quot;output&quot;: [210]}{&quot;input&quot;: [&quot;9457/01/13&quot;], &quot;output&quot;: [13]}{&quot;input&quot;: [&quot;8424/08/16&quot;], &quot;output&quot;: [229]}{&quot;input&quot;: [&quot;8373/08/06&quot;], &quot;output&quot;: [218]}","link":"/2023/04/24/%E5%A4%A7%E6%95%B8%E6%93%9A%E6%9C%9F%E4%B8%AD%E6%B8%AC%E8%B3%872_hide/"},{"title":"第三題測資","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051{&quot;input&quot;: [&quot;5 4 3 9 5 9 8 5 3&quot;], &quot;output&quot;: [5.666666666666667, 5.0, &quot;5&quot;, 2.260776661041756]}{&quot;input&quot;: [&quot;1 1 2 3 5 3 7 4 3 8 2 3 4 1 3 1 5 9 7 8 5 7 7 8 3 9 5 8 8 5 5 9 8 1 2 1 9 4 4 8 7 1 9 3 7 3&quot;], &quot;output&quot;: [4.913043478260869, 5.0, &quot;3&quot;, 2.7252928598634467]}{&quot;input&quot;: [&quot;7 2 3 4 2 4 5 3 8 1 9 9 7 4 9 9 3 1 4 3 9 8 2 7 5 5 9 3 2 4 6 1 9 4 9 5 7 2 9 2 1 1 5 7 4 5 9 9 2 6 1 3 7 3 7 6 8 2 7 9 4 8 4 9 8 5 4 1 3 1 8&quot;], &quot;output&quot;: [5.098591549295775, 5.0, &quot;9&quot;, 2.7535121213065517]}{&quot;input&quot;: [&quot;6 2 6 9 5 5 1 6 7 5 5 6 8 9 3 2 6 6 3 3 9 1 7 9 8 2 9 7 7 4 3 4 3 2 2 3 7 7 6 7 1 4 5 9 6 9 6 5 4 8 3 6 2 3 6 9 4 2 9 6 7 6 6 9 1 3 5 8 7 6 6 9 8 7 1 6 5 5 4 1 7 4 2 8 8 6 2 5 1 6 4 9 6 8 5 7 4 2 5 9 3 2 9 5 7 1 9 5 2 9 5 7 1 7 4 2 4 4 3 4 6 5 4 2 2 3 4 8 9 8 4 8 8 1 7 6 8 6&quot;], &quot;output&quot;: [5.268115942028985, 5.5, &quot;6&quot;, 2.4451663500283716]}{&quot;input&quot;: [&quot;1 6 2 6 2 8 6 9 8 2 6 8 4 8 9 3 8 4 5 4 1 6 8 1 8 3 7 6 9 9 4 2 2 6 8 2 6 1 8 2 5 6 1 6 7 5 3 3&quot;], &quot;output&quot;: [5.083333333333333, 6.0, &quot;6&quot;, 2.6047499346812972]}{&quot;input&quot;: [&quot;3 5 5 4 9 2 2 2 2 6 1 4 6 7 8 2 2 6 6 5 5 8 2 8 7 9 1 2 8 3 3 4 2 2 1 8 2 9 4 6 9 8 2 5 9 9 4 1 1 5 3 3 9 1 8 4 1 9 4 3 4 3 3 9 5 6 9 5 1 3 3 9 4 7 9 9 7 6 9 5 5 3 2 5 7 3 9 8 2 6 7 9 9 7 4 4 6 1 3 9 7 3 2 4 5 8 7 7 1 9 8 5 8 1 7 8 1 2 9 6 1 5 9 3 2 9 2 1 8 1 9 2 6 6 2&quot;], &quot;output&quot;: [5.022222222222222, 5.0, &quot;9&quot;, 2.7661088237253715]}{&quot;input&quot;: [&quot;8 6 9 6 6 6 1 8 2 4 4 2 9 7 5 5 1 9 5 8 5 1 7 5 1 8 5 5 7 4 7 8 2 6 9 4 9 1 4 3 4 3 1 8 3 5 3 4 8 1 6 4 4 3 8 5 4 8 1 8 5 1 2 7 5 5 3 3 4 9 4 9 4 6 1 7 1 7 5 7 6 2 1 4 7 6 5 2 9 5 4 3 3 9 6 2 8 9 6 8 2 3 9 2 1 5 1 7 5 9 8 9 6 7 2 2 9 8 5 3 3 4 9 9 5 1 8 5 3 7 4 9 3 1 4 9&quot;], &quot;output&quot;: [5.073529411764706, 5.0, &quot;5&quot;, 2.5885277241217084]}{&quot;input&quot;: [&quot;4 2 7 5 2 7 8 2 7 8 1 5 1 7 4 4 7 2 4 8 5 3 4 5 5 4 3 1 4 9 6 5 2 2 9 3 9 8 3 2 6 9 6 9 3 8 3 9 9 6 5 2 6 3 8 3 6 5 7 7 2 5 3 4 7 3 3 4 2 5 8 1 6 9 8 6 8 8 6 8 8 2 1 8 1 5 3 4 9 7 3 9 8 5 9 6 1 4 2 9 3 7 7 1 4 8 5 7 6 3 8 4 4 9 8 9 9 3 4 4 1 9&quot;], &quot;output&quot;: [5.245901639344262, 5.0, &quot;8&quot;, 2.5489035746665922]}{&quot;input&quot;: [&quot;6 6 1 3 8 1 5 2 9 2 7 9 9 9 8 8 4 2 2 7 4 1 8 6 7 4 1 7 4 9 9 2 5 9 3 5 7 7&quot;], &quot;output&quot;: [5.421052631578948, 6.0, &quot;9&quot;, 2.7590194572802433]}{&quot;input&quot;: [&quot;4 5 5 6 9 7 6 7 8 1 9 6 6 7 2 8 3 1 6 8 9 9 9 4 8 6 7 2 8 9 7 1 7 3 4 5 4 1 5 6 2 4 5 8 7 6 1 1 8 2 9 6 7 9 7 6 1 6 4 4&quot;], &quot;output&quot;: [5.516666666666667, 6.0, &quot;6&quot;, 2.533059195693794]}{&quot;input&quot;: [&quot;8 2 9 4 6 3 3 5 3 9 1 9 7 1 8 8 4 1 1 2 4 1 7 3 2 9 5 1 3 4 8 7 9 5 5 9 3 3 7 9 2 1 7 7 1 6 9 3 5 9 2 4 4 5 7 5 6 8 2 6 2 2 8 5 5 2 2 3 4 8 5 5 4 7 1 9 9 2 3 6 3 4 9 4 6 1 3 4 5 4 2 9 8 9 4 6 2 6 9 7 9 3 3 8 4 5 2 9 2 9 1 2 6&quot;], &quot;output&quot;: [4.929203539823009, 5.0, &quot;9&quot;, 2.6664643460984094]}{&quot;input&quot;: [&quot;6 8 1 6 7 1 6 3 1 3 3 6 9 4 2 6 1 3 9 8 6 5 7 3 6 7 5 5 6 2 7 4 4 5 5 2 2 7 3 6 8 2 9 8 1 8 2 3 8 1 7 8 1 8 1 1 6 5 3 6 1 8 8 2 7 5 7 2 7&quot;], &quot;output&quot;: [4.826086956521739, 5.0, &quot;6&quot;, 2.5535228393318294]}{&quot;input&quot;: [&quot;8 4 8 9 4 1 1 3 2 8 3 8 2 1 3 5 6 8 3 2 8 8 9 6 2 7 3 8 2 9 1 2 9 6 6 3 5 2 1 1 7 6 3 8 3 3 8 9 9 1 3 9 3 4 7 8 1 4 8 2 8 1 7 2 2 5 8 9 3 9 1 2 9 5 2 8 9 6 4 4 8 1 4 2 6 9 5 8 2 6 4 5 7 6 9 6 1 3 8 5 2 8 9 5 2 5 8 7 3 4 9 4 3 4 8 9 2 8 1 9 1 3 7 9 1 4 3 8&quot;], &quot;output&quot;: [5.0625, 5.0, &quot;8&quot;, 2.8027609155973328]}{&quot;input&quot;: [&quot;7 5 9 5 4 5 9 1 7 6 3 2 3 5 1 2 1 1 6 3 8 9 5 6 6 3 8 8 8 7 1 2 7 7 7 4 3 9 3 2 4 1 7 6 9 9 5 5 8 3 4 4 1 2 1 6 2 2 7 7 5 6 2 8 8 1 7 8 2 7 9 5 5 7 9 2 8 7 1 5 4 1 9&quot;], &quot;output&quot;: [5.024096385542169, 5.0, &quot;7&quot;, 2.652463749519879]}{&quot;input&quot;: [&quot;3 2 1 7 3 4 3 4 4 2 9 4 6 4 1 3 9 8 3 1 4 9 2 4 5 7 7 8 3 8 8 5 7 9 5 3 7 7 7 4 5 1 8 5 6 4 4 5 5 1 8 3 7 5 4 5 1 8 8 5 7 2 8 4 8 5 9 4 6 5 1 2 9 1 6 4 6 8 6&quot;], &quot;output&quot;: [5.050632911392405, 5.0, &quot;4&quot;, 2.4019967125327435]}{&quot;input&quot;: [&quot;9 8 2 7 6 7 6 9 5 5 3 9 8 8 2 6 3 6 5 6 6 6 6 1 4 2 4 8 4 6 9 6 7 7 1 9 7 9 5 2 6 8 5 7 5 6 9 6 8 6 7 2 2 3 3 7 6 1 4 8 2 9 6 5 4 4 6 3 1 5 4 4 2 5 5 6 7 5 7 1 5 1 5 9 9 4 6 5 6 8 6 1 4 7 6 8 3 1 2 2 2 8 3 2 4 8 4 6 2 4&quot;], &quot;output&quot;: [5.181818181818182, 5.5, &quot;6&quot;, 2.3517182042916396]}{&quot;input&quot;: [&quot;3 2 4 2 7 8 4 8 8 8 5 6 2 1 2 9 2 6 7 6 9 1 5 8 6 8 9 7 5 2 9 5 7 5 2 9 2 9 1 3 6 6 3 1 3 5 2 5 4 8 6 5 6 3 4 7 4 1 8 7 8 1 5 3 2 3 6 8 4 5 2 4 4 5 9 9 2 4 2 3 9 7 7 1 9 5 4 5 4 1 8 7 9 6 4 3 3 3 5 6 6 5 6 6 3 9 9 2 1 5 6 3 2 7 2 2 9 7 3 2 6 3 6 4 1 4 3 7 8 9 5 1 4 6 8 4 5 9 1 2 5 2 8 6 7&quot;], &quot;output&quot;: [4.9655172413793105, 5.0, &quot;2&quot;, 2.498037279486184]}{&quot;input&quot;: [&quot;7 9 2 1 7 8 3 6 3 2 1 9 2 5 8 8 8 8 1 2 3 3 6 1 8 2 3 2 2 3 5 4 7 9 3 7 4 5 2 2 4 5 4 4 9 2 3 5&quot;], &quot;output&quot;: [4.520833333333333, 4.0, &quot;2&quot;, 2.5657161389279906]}{&quot;input&quot;: [&quot;9 5 9 5 7 9 9 9 4 2 7 5 6 5 1 3 3 3 7 3 1 3 2 8 5 6 6 8 2 8 4 9 6 5 1 6 6 5 3 6 5 8 6 6 2 9 5 1 6 7 2 9 4 8 4 1 9 2 9 4 5 1 2 6 4 9 5 4 6 9 4 7 4 6 1 2 2 3 9 1 2 9 3 2 6 9 2 9 8 7 8 7 4 5 4 6 2 9 8 2 8 2 6 8 4 2 7 6 7 3 3 2 6 2 5 6 6 1 2 1 3 6 7 2 4 1 7 8 7 4 9 4 8 5&quot;], &quot;output&quot;: [5.08955223880597, 5.0, &quot;6&quot;, 2.5610826959763164]}{&quot;input&quot;: [&quot;8 3 1 9 2 1 1 5 8 6 5 1 2 7 1 7 3 7 4 3 5 6 9 9 6 9 6 1 3 1 7 1 5 4 4 3 1 2 3 7 8 5 2 5 6 3 9 2 3 7 4 7 3 4 1 3 4 5 7 3 6 5 4 8 5 7 8 8 2 1 1 5 7 1 3 9 9 6 4 8 8 5 7&quot;], &quot;output&quot;: [4.746987951807229, 5.0, &quot;1&quot;, 2.568780937697673]}{&quot;input&quot;: [&quot;5 4 9 2 9 1 1 6 1 2 1 6 2 3 2 9&quot;], &quot;output&quot;: [3.9375, 2.5, &quot;1 2&quot;, 2.9255074346171126]}{&quot;input&quot;: [&quot;1 9 4 2 9 5 1 2 2 3 7 8 1 1 4 7 6 5 9 6 2 3 6 4 9 3 3 5 8 2 2 3 9 1 4 5 9 4 7 2 3 9 8 1 7 5 9 8 3 1 1 8 8 5 9 7 1 3 4 4 4 3 8 1 6 8 9 7 3 3 1 4 3 6 7 1 9 7 8 5 8 9 5 6 5 1 3 9 2 1 6 3 2 8 2 2 5 8 1 9 5 3 8 1 6 7 9 3 7 5 3 3 4 3 7 5 8 5 7 9 5 4 4 7 5 9 3 7 4 4 4 8 9 7 9 6 9 3 8 1 4 1 9 6 1 3 5 9 9 9 5 3 6 2 5 8&quot;], &quot;output&quot;: [5.089743589743589, 5.0, &quot;9&quot;, 2.687510989534585]}{&quot;input&quot;: [&quot;3 8 1 1 2 5 2 3 4 1 6 2 6 8 4 4 1 1 9 9 7 9 7 7 3 8 8 3 7 6 8 1 9 1 3 4 2 5 3 8 2 2 9 9 9 3 3 8 8 8 7 9 8 6 5 1 3 6 7 9 8 2 8 5 8 3 6 8 6 9 7 8 1 1 2 3 8 9 8 8 3 5 4 6 7 5 4 9 8 5 2 3 3 4 7 4 7 6 1 9 4 6 7 5 6 5 3 1 6 9 5 1 8&quot;], &quot;output&quot;: [5.283185840707965, 6.0, &quot;8&quot;, 2.675582895878928]}{&quot;input&quot;: [&quot;6 9 3 4 4 6 1 6 5 8 9 3 7 5 5 4 9 5 2 9 2 9 9 2 4 9 8 1 1 1 8 9 5 4 1 1 5 7 7 2 4 3 8 8 7 7 6 8 7 6 8 5 4 8 2 2 1 9 4 6 8 7 9 1 2 6 5 7 5 4 6 7 1 6 2 6 4 5 6 9 6 2 7 9 9 9 9 6 5 9 9&quot;], &quot;output&quot;: [5.538461538461538, 6.0, &quot;9&quot;, 2.6240966726517163]}{&quot;input&quot;: [&quot;4 5 6 7 3 4 1 7 3 6 7 1 5 1 6 9 4 1 1 3 4 5 2 4 1 8 8 4 2 2 7 1 4 7 5 3 5 5 3 2 4 9 8 7 6 9 3 3 1 1 8 9 3 8 9 1 2 1 7 5 6 7 5 9 4 5 7 7 4 1 9 2 2 9 4 1 1 9 6 4 9 2 3 1 3 4 3 8 8 5 3 7 1 4 2 8 2 9 6 3 7 2 2 4 2 8 7 5 8 7 1 5 2 5 1 3 2 3 4 2 6 3 9 3 9 3 5 6 3 1 8 1 5 4 9 8 9 9 6&quot;], &quot;output&quot;: [4.676258992805756, 4.0, &quot;1&quot;, 2.644978484736934]}{&quot;input&quot;: [&quot;2 1 5 7 8 6 6 1 6 3 1 8 4 6 5 7 3 6 6 2 1 6 8 3 3 6 9 1 5 3 6 9 9 1 1 3 3 1&quot;], &quot;output&quot;: [4.5, 5.0, &quot;6&quot;, 2.603135760861059]}{&quot;input&quot;: [&quot;9 6 9 8 4 2 6 7 5 1 3 1 9 8 2 8 5 5 4 5 9 2 5 5 3 4 9 4 8 4 7 4 1 9 1 5 4 4 1 6 5 3 1 6 2 6 5 7 6 6 4 9 6 7 6 2 1 8 1 1 4 6 1 1 5 9 9 8 9 4 8 7 9 4 5 9 9 1 3 3 8 1 8 3 3 9 7 4 5 3 5 3 6 1 9 2 8 3 5 9 2 1 3 9 3&quot;], &quot;output&quot;: [5.0285714285714285, 5.0, &quot;9&quot;, 2.6919886183058863]}{&quot;input&quot;: [&quot;6 2 3 5 2 5 5 5 7 5 3 5 4 8 3 9&quot;], &quot;output&quot;: [4.8125, 5.0, &quot;5&quot;, 1.9435389756832766]}{&quot;input&quot;: [&quot;6 6 7 1 3 8 9 5 8 3 2 2 4 8 1 2 2 9 3 1 3 3 1 3 9 3 4 5 8 1 2 1 7 8 9 1 6 9 2 7 8 7 3 2 7 2 4 8 1 1 7 4 2 6 9 9 7 9 4 5 3 1 7 3 4 6 5 2 9 5 7 4 2 3 4 4 6 1 1 9 1 3 6 1 4 9 4 6 8 3 4 8 8 2 2 1 5 6 7 7 3 7 8 7 8 3 2 6 2 9 3 9 5 9 2 2 9 6 3 3 3 7 7 6 4 9 9 9 5 2 1 6 3 8 4 5 3 1 8 8 7 3 5 1 7 9 1 8 3 7 9 6 6 1 8 6&quot;], &quot;output&quot;: [4.92948717948718, 5.0, &quot;3&quot;, 2.713008027545798]}{&quot;input&quot;: [&quot;2 9 7 6 3 1 9 8 5 6 1 3 4 6 2 4 5 2 3 4 4 9 6 8 9 6 8 8 4 6 2 2 6 5 6 7 7 2 7 1 7 1 3 4 4 9 4 2 3 8 2 7 5&quot;], &quot;output&quot;: [4.943396226415095, 5.0, &quot;2 4 6&quot;, 2.4603657830495154]}{&quot;input&quot;: [&quot;8 1 5 1 9 4 2 2 9 8 2 9 6 4 6 8 5 9 4 2 3 8 2 7 5 1 7 1 1 1 7 5 8 1 1 9 9 5 4 8 6 5 3 6 3 5 3 4 6 1 2 1 3 9 5 7 9 2 4 3 9 4 7 6 2 7 4 5 9 3 2 5 8 3 6 3 2 2 4 8 3 2 8 8 1 6 8 6 6 3 1 5 9 8 9 9 7 9 9 2 7 6 2 5 9 7 8 9 7 7 8 1 5 5 9 2 7 1 5 3 2 9 8 7 6 3 6 9 6 5 1 3 6 9 1 7 6 6 4 8 8 4 9 9 3 3 2 4 1 2 2 3 5 5 9 1 7 9 2 1 6 2 1 1 7 3 9&quot;], &quot;output&quot;: [5.059880239520958, 5.0, &quot;9&quot;, 2.7461472168395544]}{&quot;input&quot;: [&quot;4 1 7 2 3 1 1 2 7 4 6 6 2 6 2 6 8 1 3&quot;], &quot;output&quot;: [3.789473684210526, 3.0, &quot;1 2 6&quot;, 2.330099328545122]}{&quot;input&quot;: [&quot;8 5 3 4 9 2 3 3 6 4 8 2 5 2 2 3 1 8 4 7 5 2 7 3 7 3 2 4 2 1 1 6 7 3 6 1 5 8 3 5 6 4 4 6 7 1 8 5 3 4 2 4 9 7 5 9 1 2 8 2 6 5 1 9 4 3 4 1 2 7 1 6 3 7 6 3 8 8 3 5 4 7 8 5 5 6 5 4 4 8 5 8 8 4 1 3 7 4 6 3 7 3 1 6 3 7 6 4 6 3 1 6 4 5 1 6 5 4 1 4 5 2 7&quot;], &quot;output&quot;: [4.560975609756097, 4.0, &quot;4&quot;, 2.27801918471052]}{&quot;input&quot;: [&quot;2 5 3 1 5 7 6 9 9 8 1 5 8 3 1 3 2 3 5 2 9 5 4 1 5 6 2 2 6 6 6 8 4 9 4 2 9 1 4&quot;], &quot;output&quot;: [4.641025641025641, 5.0, &quot;2 5&quot;, 2.6065713749436963]}{&quot;input&quot;: [&quot;6 6 9 2 4 4 1 9 5 4 7 2 7 6 3 2 7 1 3 2 1 1 6 4 5 3 3 7 4 6 4 7 9 1 7 4 8 6 8 2 1 3 8 5 5 5 8 7 2 3 4 6 9 2 1 3 8 7 3 1 9 7 5 9 3 9 6 9 1 9 9 6 7 3 1 8 8 3 6 5 9 5 4 3 7 8 4 4 3 1 6 6 9 9 1 6 2 6 2 3 2 9 1 6 5 3 9 9 5 9 3 3 1 3 1 5 5 5 4 2 8 5&quot;], &quot;output&quot;: [4.926229508196721, 5.0, &quot;3&quot;, 2.61511380433454]}{&quot;input&quot;: [&quot;6 8 3 4 9 7 4 7 9 6 6 2 9 5 8 9 2&quot;], &quot;output&quot;: [6.117647058823529, 6.0, &quot;9&quot;, 2.37344011786259]}{&quot;input&quot;: [&quot;9 5 4 4 3 7 2 7 9 8 4 5 8 3 3 3 9 3 5 4 7 4 1 4 7 4 4 2 3 8 8 4 3 5 8 3 7 4 2 5 9 3 7 2 1 9 6 9 4 2 3 2 8 3 6 8 3 1 4 9 1 6 5 6 7 4 3 8 2 8 4 8 9 3 4 6 7 8 5 1 5 9 8 5 9 6 2 8 3 1 5 4 5 6 9&quot;], &quot;output&quot;: [5.126315789473685, 5.0, &quot;4&quot;, 2.4591059790229624]}{&quot;input&quot;: [&quot;6 5 7 6 2 4 4 1 7 8 4 1 7 7 9 6 3 8 7 7 8 9 2 5 6 1 8 9 6 9 1 3 1 1 5 5 9 5 8 3 4 9 3 9 2 7 6 7 7 6 7 7 9 6 2 1 5 4 9 8 5 6 2 7 9 1 4 6 5 8 9 9 3 8 4 6 6 6 1 2 8 4 4 1 1&quot;], &quot;output&quot;: [5.364705882352941, 6.0, &quot;6&quot;, 2.6160008042071503]}{&quot;input&quot;: [&quot;5 8 6 4 9 3 4 9 4 1 7 6 1 7 5 8 1 8 9 9 7 7 3 8 3 3 9 8 1 7 9 1 1 5 2 1 1 5 4 3 4 4 9 7 2 7 9 2 7 9 2 8 7 7 3 4 4 4 5 3 7 7 3 6 9 5 3 5 7 4 8 1 9 1 4 2 8 7 8 2 6 2 4 5 4 4 4&quot;], &quot;output&quot;: [5.103448275862069, 5.0, &quot;4&quot;, 2.6043044949654077]}{&quot;input&quot;: [&quot;2 4 4 5 5 6 1 9 7 6 1 3 4 4 6 2 4 8 2 1 3 2 7 2 5 7 6 7 5 9 8 8 5 4 9 4 7 7 5 2 8 7 5 6 3 9 8 9 1 8 3 5 3 4 3 9 5 3 1 3 1 4 8 6 9 1 7 3 9 6 2 4 7 4 1 6 1 7 2 3 9 8 7 4 4 6 9 8 8 9 4 8 6 2 7 6 1 6 1 9 1 8 3 8 6 4 2 5 7 3 4 2 7 9 1 4 7 5 2 2 9 2 5 3 9 5 4 1 9 5 6 4 3 6 6 2 6 1 4 7 3 6 9 6 5 3 9 1 2 5 2 6 5 2 3 6 7 4 7 8 2 7 4 2 6 6 5 7 1 9 3 9 1 8 3 7 3 1 1 7 1 3 9 9 9 8 6 7 9 2 3 3 9 8 7 7 9 3 7 2&quot;], &quot;output&quot;: [5.055, 5.0, &quot;7 9&quot;, 2.596531340076603]}{&quot;input&quot;: [&quot;2 5 4 7 5 9 7 5 7 9 3 3 7 7 8 6 7 8 8 7 5 3 6 5 7 5 5 5 4 5 7 1 3 6 2 6 9 2 6 3 6 8 2 6 8 5 9&quot;], &quot;output&quot;: [5.595744680851064, 6.0, &quot;5&quot;, 2.110355162889777]}{&quot;input&quot;: [&quot;8 4 5 3 8&quot;], &quot;output&quot;: [5.6, 5.0, &quot;8&quot;, 2.0591260281974]}{&quot;input&quot;: [&quot;4 4 6 5 7 3 6 8 1 8 6 1 2 8 2 1 9 3 5 8 7 1 1 2 2 7 5 3 3 4 8 6 2 9 8 4 6 5 7 3 8 2 3 9 7 1 5 5 3 3 3 5 2 4 9 7 8 9 1 4 7 8 9 6 5 2 3 1 6 9 4 2 2 1 1 5 4 4 2 9 5 4 4 1 3 2 5&quot;], &quot;output&quot;: [4.620689655172414, 4.0, &quot;2&quot;, 2.5607172994288403]}{&quot;input&quot;: [&quot;6 5 5 5 3 8 9 6 6 3 6 5 6 7 9 9 8 5 9 3 9 3 3 2 8 6 2 3 7 2 5 6 3 4 5 3 4 2 2 1 7 7 9 5 9 6 2 7 7 9 9 4 7 4 4 7 8 4 4 8 5 4 3 4 8 9 6 5 5 7 7 9 2 8 3&quot;], &quot;output&quot;: [5.533333333333333, 5.0, &quot;5 9&quot;, 2.2939534045447005]}{&quot;input&quot;: [&quot;7 1 5 2 9 6 1 5 2 2 5 7 2 9 3 9 8 1 1 6 3 4 3 6 3 6 6 6 1 6 2 2 5 8 5 2 7 8 3 5 2 6 3 8 2 2 5 6 8 1 6 3 1 7 6 2 9 8 6 3 5 5 6 1 7 6 4 1 2 7 4 5 2 7 7 3 8 2 8 6 9 9 2 2 2 2 4 7 5 3 7 4 9 2 6 5 9 4 9 4 3 9 3 3 5 7 7 4 2 6 1 8 8 6 6 2 7 3 9 6 3 2 2 2 8 1&quot;], &quot;output&quot;: [4.753968253968254, 5.0, &quot;2&quot;, 2.5187755526657143]}{&quot;input&quot;: [&quot;2 8 3 2 5 6 9 5 5 7 6 7 9 2 4 6 4 3 8 2 1 4 2 1 7 4 3 8 1 1 5 6 2 4 8 5 3 7 5 1 9 3 8 4 9 5 4 2 5 6 5 6 3 1 1 1 7 3 6 2 9 1 8 9 7 7 2 8 9 9 1 8 7 3 9 6 6 8 4 6 1 4 5 2 6 6 6 4 7 8 3 5 8 2 1 1 3 2 2 7 3 9 1 3 2 9 8 6 5&quot;], &quot;output&quot;: [4.834862385321101, 5.0, &quot;1 2 6&quot;, 2.6108937675565946]}{&quot;input&quot;: [&quot;5 3 7 8 4 3 5 6 4 4 3 3 8 9 4 1 4 5 3 6 8 1 9 1 8 3 4 4 3 6 1 6 1 3 1 9 8 6 7 4 1 1 7 6 2 6 9 9 7 4 6 8 5 1 4 3 2 7 8 3 8 6 3 3 5 2 2 1 1 5 6 2 6 6 3 2 7 8 7 9 1 6 9 7 9 9 3 9 3 8 3 1 7 5 4 4 7 4 5 2 5 5 2 1 2 6 7 1 2 8 5 8 4 9 1 1 5 5 4 3 1 3 4 2 8 8 7 1 3 1 4 9 1 1 8 6 3 6 6 9 3 9 7 9 5 7 8 7 8 4 5 1 9 8 8 9 9 4 1 3 5 5 4 5 2&quot;], &quot;output&quot;: [4.878787878787879, 5.0, &quot;1&quot;, 2.621098263423129]}{&quot;input&quot;: [&quot;4 6 3 9 8 2 6 4 6 4 8 8 9 7 8 8 8 7 8 2 4 9 9 4 6 6 6 5 9 5 5 1 3 2 5 6 3 7 4 5 4 7 8 7 3 3 3 3 9 2 8 3 3 9 4 4 6 9 6 4 2 9 6 4 2 2 1 2 5 3 9 6 8 6 5 8 9 3 4 8 3 1 6 9 1 4 7 2 2 8 6 8 2 5 8 4 5 7 6 3 6 2 9 9 8 5 6 2 8 6 6 2 2 9 2 5 9 7 4 8 6 5 4 5 2 8 5 3 2&quot;], &quot;output&quot;: [5.333333333333333, 5.0, &quot;6&quot;, 2.4314902226499653]}{&quot;input&quot;: [&quot;5 2 3 9 6 1 2 2 7 2 8 6 1 1 5 8 5 1 1 1 1 6 3 4 8 8 9 1 1 8 4 2 8 8 5&quot;], &quot;output&quot;: [4.3428571428571425, 4.0, &quot;1&quot;, 2.857999871467128]}{&quot;input&quot;: [&quot;7 6 3 9 2 7 6 6 7 6 1 8 1 6 2 7 8 2 8 8 6 9 9 9 4 2 1 3 2 1 2 1 7 4 4 1 4 1 3 7 2 2 5 5 7 7 8 2 3 7 8 8 2 2 6 4 4 4 9 5 4 5 1 3 6 9 4 8 3 5 5 5 1 9 9&quot;], &quot;output&quot;: [4.8933333333333335, 5.0, &quot;2&quot;, 2.630960956676392]}","link":"/2023/04/24/%E5%A4%A7%E6%95%B8%E6%93%9A%E6%9C%9F%E4%B8%AD%E6%B8%AC%E8%B3%873_hide/"},{"title":"b367. 翻轉世界","text":"有位勇士排除萬難後, 來到了最後一關—–[翻轉世界] 他發現所有物品都翻轉了 180 度 如果要繼續前進必須做出一項選擇, 也就是找到翻轉後不會改變的東西! 例如: 110 000 011 若翻轉 180 度: 110 000 011 現在給你一張圖 請你幫忙這位勇士吧, 因為除了必須判斷這個問題以外, 還必須打倒翻轉世界的怪物才行 所以請你寫一個程式幫他 輸入說明 每行有一正整數 T(T&lt;11)，代表有幾組測試資料 接下來有 T 行， 每行有 N、M 兩正整數 N 代表長,M 代表寬 (0&lt;N,M&lt;11) 而接下會有 N 行, 每一行會有 M 個數字 r (0&lt;=r&lt;231-1) 輸出說明 對於每個測資, 判斷是否可以符合翻轉 180 度不會改變的圖形 是的話請輸出 go forward 否的話請輸出 keep defending 1234567891011121314151617181920212223242526272829# 定義一個函數來檢查給定列表是否為迴文def check_circle(temp_list): # 循環遍歷列表的前半部分 for i in range(0, len(temp_list) // 2, 1): # 如果前半部分與後半部分不相同，則該列表不是迴文 if temp_list[i] != temp_list[len(temp_list) - i - 1]: return False # 如果列表是迴文，則返回 True return True# 獲取測試數量test_number = int(input())# 對於每個測試案例for l in range(0, test_number, 1): # 獲取 n 和 m n, m = map(int, input().split()) temp_list = [] # 將 n 行的輸入添加到 temp_list 中 for i in range(0, n, 1): temp_list = list(map(int, input().split())) + temp_list # 檢查 temp_list 是否為迴文 if check_circle(temp_list): # 如果是迴文，輸出 &quot;go forward&quot; print(&quot;go forward&quot;) else: # 如果不是迴文，輸出 &quot;keep defending&quot; print(&quot;keep defending&quot;) b367. 翻轉世界","link":"/2023/04/29/b367_hide/"},{"title":"a054. 電話客服中心","text":"很多銀行及公司設立了電話客服中心來服務他們的客戶。為了加速身分的查核，常常會要求打電話進來的客戶輸入他的身分證號碼。可是電話上只有數字鍵，要輸入身分證號碼的第一個字母有點麻煩，因此有的語音系統會要求來電者輸入後 9 碼，再根據後 9 碼來推算可能的英文字母。 很多人都知道，身分證號碼的最後一碼是「檢查碼」，它是用前 9 碼所推算出來的，其推算的規則如下： 1. 先依照下表將英文字母轉換為 2 位數字，再加上第 2 到第 9 位的 8 位數字一共有 10 位數字。 台北市 A 10 彰化縣 N 22 台中市 B 11 新竹市 O 35 基隆市 C 12 雲林縣 P 23 台南市 D 13 嘉義縣 Q 24 高雄市 E 14 台南縣 R 25 台北縣 F 15 高雄縣 S 26 宜蘭縣 G 16 屏東縣 T 27 桃園縣 H 17 花蓮縣 U 28 嘉義市 I 34 台東縣 V 29 新竹縣 J 18 金門縣 W 32 苗栗縣 K 19 澎湖縣 X 30 台中縣 L 20 陽明山 Y 31 南投縣 M 21 連江縣 Z 33 2. 由左至右，第一位乘 1，第二位乘 9，第三位乘 8，第四位乘 7...，以此類推，最後一位乘 1。 求各位相對數字乘積的總和 s。 3. 求 s 的個位數 m。(檢查碼只有一位數，因此若 c = 10 時，則檢查碼為 0。) 檢查碼 c = 10 - m 。 假設某人的身份證號碼前 9 碼為 F13024567，那麼他的最後一位檢查碼的計算過程如下： F 1 3 0 2 4 5 6 7 1 5 1 3 0 2 4 5 6 7 ×1 ×9 ×8 ×7 ×6 ×5 ×4 ×3 ×2 ×1 1 + 45 + 8 + 21 + 0 + 10 + 16 + 15 + 12 + 7 = 135 檢查碼 = 10 - (135 % 10) = 5 根據上面的規則，A12345678、M12345678 和 W12345678 這三個號碼的檢查碼都是 9。因此，如果在電話上所輸入的後 9 碼是 123456789 時，它的第一位英文字母可能是 A，也可能是 M 或 W。 此題要求使用 dictionary 下去做運算 123456789101112131415161718192021222324check_list={'A':1,'B':10,'C':19,'D':28,'E':37 ,'F':46,'G':55,'H':64,'I':39,'J':73 ,'K':82,'L':2,'M':11,'N':20,'O':48 ,'P':29,'Q':38,'R':47,'S':56,'T':65 ,'U':74,'V':83,'W':21,'X':3,'Y':12 ,'Z':30}id=list(input())# 計算身份證字號的後九碼, 第九碼不計算 sum_num=0for i in range(0,9,1): sum_num=sum_num+int(id[i])*(8-i)# 計算測試碼 # 測試碼 + 餘數碼 = 檢查碼 test=10-int(id[8])# 在所有可能的行政區域編號中，搜尋符合的行政區域編號，並輸出 for i in check_list: if (sum_num+check_list[i])%10 == test%10: print(i,end='') a054. 電話客服中心","link":"/2023/05/06/a054dict_hide/"},{"title":"e272. gcd(Fm,Fn)","text":"給你 n,m, 求 gcd(Fm,Fn) *Fx 代表 Fibonacci 數列第 x 項 2019/6/8 時限調降至 0.5s 輸入說明 輸入有多行 每行有 m,n 兩數(m,n&lt;=10000) 輸出說明 答案(保證可以用 unsigned long long 存) 1. 此題的考點在於如何使用遞迴函數來運算 fibonacci 數列2. 但使用此解法無法通過測支, 所以需優化程式, 查表法為最速解3. 先使用另一個.py 列印出 1~94 的 fibonacci 數列 list4. 此題須了解到兩 fibonacci 數做 GCD 的結果 = 兩數做 GCD 的 fibonacci 數 12345678# 使用偷吃步預測 fibonacci 數列只會遞迴至 94 項, 優先使用 list 查表法降低處理時間, 如使用遞迴法書寫 fibonacci 數列, 有機會溢出, 故使用 list 法def fibonacci(x): for i in range(2,x+1,1): fibon_list.append(fibon_list[-1]+fibon_list[-2])fibon_list=[0,1]fibonacci(94)print(fibon_list) 12345678910111213141516171819202122232425262728293031323334353637383940414243def gcd(a,b): r=1 while r!=0: r=a%b a=b b=r return afibon_list=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377 , 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657 , 46368, 75025, 121393, 196418, 317811, 514229, 832040 , 1346269, 2178309, 3524578, 5702887, 9227465, 14930352 , 24157817, 39088169, 63245986, 102334155, 165580141 , 267914296, 433494437, 701408733, 1134903170 , 1836311903, 2971215073, 4807526976, 7778742049 , 12586269025, 20365011074, 32951280099, 53316291173 , 86267571272, 139583862445, 225851433717, 365435296162 , 591286729879, 956722026041, 1548008755920 , 2504730781961, 4052739537881, 6557470319842 , 10610209857723, 17167680177565, 27777890035288 , 44945570212853, 72723460248141, 117669030460994 , 190392490709135, 308061521170129, 498454011879264 , 806515533049393, 1304969544928657, 2111485077978050 , 3416454622906707, 5527939700884757, 8944394323791464 , 14472334024676221, 23416728348467685 , 37889062373143906, 61305790721611591 , 99194853094755497, 160500643816367088 , 259695496911122585, 420196140727489673 , 679891637638612258, 1100087778366101931 , 1779979416004714189, 2880067194370816120 , 4660046610375530309, 7540113804746346429 , 12200160415121876738, 19740274219868223167 , 31940434634990099905]while True: try: first,second=map(int,input().split()) ans=gcd(first,second)# 先做 GCD print(fibon_list[ans])# 查表 GCD 對應的 fibonacci 數 except: break e272. gcd(Fm,Fn)","link":"/2023/05/06/e272_hide/"},{"title":"c087. 00412 - Pi","text":"英國一個大學教授 Robert A.J. Matthews 根據夜空中劃過天際的星星的位置，讓人驚訝的推論出關於 Pi（原週率）的準確度。當然，這牽扯到數論的理論及應用。在此，我們沒有夜空，但是我們要用相同的理論來估計 Pi 的值： 從一個數量龐大的數的集合中隨機的取 2 個數，這 2 個數互質（就是沒有比 1 大的公因數）的機率是: 例如：假設一個數的集合為 {2,3,4,5,6}，可以形成 10 對數。其中(2,3), (2,5), (3,4), (3,5), (4,5), (5,6) 這 6 對數互質。所以我們可以推出： 在這個問題中，給你一些數，要請你估計出 Pi 的值。 輸入說明 輸入包含多組測試資料。每組測試資料的第一列有一個正整數 N（1 &lt; N &lt; 50），代表集合中元素的個數。接下來的 N 列每列各有一個正整數，代表此集合中的數。這些數都大於 0，並且小於 32768。 N=0 代表輸入結束。請參考 Sample Input。 輸出說明 對每一組測試資料，輸出你所估計 Pi 的值，四捨五入到小數點後 6 位。如果沒有任何一對數互質，請輸出 No estimate for this data set. 請參考 Sample Output。 1234567891011121314151617181920212223242526272829303132333435from math import sqrtdef check_inverse(a,b): while a%b!=0: r=a%b a=b b=r if r==1: return 1 else: return 0while True: number=int(input()) if number==0: break sum_inverse_value=0 total=0 input_list=[] for i in range(0,number,1): temp=int(input()) input_list.append(temp) for i in range(0,number,1): for j in range(i+1,number,1): sum_inverse_value=sum_inverse_value+check_inverse(input_list[i],input_list[j]) for i in range(0,number,1): total=total+i if sum_inverse_value==0: print(&quot;No estimate for this data set.&quot;) else: pi=sqrt(6/sum_inverse_value*total) print(round(pi,6)) c087. 00412 - Pi","link":"/2023/05/06/c087_hide/"},{"title":"a044. 空間切割","text":"內容 對任意正整數 n，空間中的 n 個平面最多可將空間切成幾個區域？ 輸入說明 輸入若干行直到 EOF 為止。每一行包含一個正整數 n 輸出說明 針對每一個 n ，輸出切割出的區域數。 answer=((n+1)*((n*n)-n+6))/6 1234567while True: try: space=int(input()) print(int(((space+1)*((space*space)-space+6))/6)) except: break a044. 空間切割","link":"/2023/05/15/a044_hide/"},{"title":"b050. 1. 集合運算","text":"內容 數學集合各種運算以下列符號表示： x 屬於(belong to)A 記做 x in A A 與 B 聯集 (union) 記做 A + B A 與 B 交集 (intersection) 記做 A * B A 與 B 差集 (difference) 記做 A – B A 包含(contain)B 記做 A &gt;= B 製作一個「集合」類別(set class)，使其能進行聯集、交集、差集、包含等運算。 輸入說明 每組測資的第一行 n 表示有 n 個集合，接著有 n 行分別為集合 A、B、C…的內容。 n=0 時表示輸入結束。 輸出說明 印出上述運算結果。 f-string 技巧 範例輸入 #12abcdefcfehi234abcef340範例輸出 #1Test Case 1:A: {abcdef}B: {cefhi}A+B: {abcdefhi}A*B: {cef}A-B: {abd}B-A: {hi}A does not contain BB does not contain ATest Case 2:A: {34abcef}B: {34}A+B: {34abcef}A*B: {34}A-B: {abcef}B-A: {}A contains BB does not contain A 組合解法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354count=1while True: n=int(input()) if n==0: break set_1=set(input()) set_2=set(input()) print('Test Case '+str(count)+':') count+=1 temp_1=sorted(list(set_1)) print('A: {',end='') print(*temp_1,sep='',end='') print(&quot;}&quot;) temp_2=sorted(list(set_2)) print('B: {',end='') print(*temp_2,sep='',end='') print(&quot;}&quot;) #print(set_1,set_2) # 聯集 union print(&quot;A+B: {&quot;,end='') temp_1=sorted(list(set_1|set_2)) print(*temp_1,sep='',end='') print(&quot;}&quot;) # 交集 intersection print(&quot;A*B: {&quot;,end='') temp_1=sorted(list(set_1&amp;set_2)) print(*temp_1,sep='',end='') print(&quot;}&quot;) # 差集 difference(A-B) print(&quot;A-B: {&quot;,end='') temp_1=sorted(list(set_1-set_2)) print(*temp_1,sep='',end='') print(&quot;}&quot;) # 差集 difference(B-A) print(&quot;B-A: {&quot;,end='') temp_1=sorted(list(set_2-set_1)) print(*temp_1,sep='',end='') print(&quot;}&quot;) if set_2.issubset(set_1): print('A contains B') else: print(&quot;A does not contain B&quot;) if set_1.issubset(set_2): print('B contains A') else: print(&quot;B does not contain A&quot;) f-string 解法1234567891011121314151617181920212223242526272829303132333435363738394041count = 1while True: n = int(input()) if n == 0: break set_1 = set(input()) set_2 = set(input()) print(f'Test Case {count}:') count += 1 temp_1 = sorted(list(set_1)) print(f&quot;A: {{{''.join(temp_1)}}}&quot;) temp_2 = sorted(list(set_2)) print(f&quot;B: {{{''.join(temp_2)}}}&quot;) # 聯集 union temp_1 = sorted(list(set_1 | set_2)) print(f&quot;A+B: {{{''.join(temp_1)}}}&quot;) # 交集 intersection temp_1 = sorted(list(set_1 &amp; set_2)) print(f&quot;A*B: {{{''.join(temp_1)}}}&quot;) # 差集 difference(A-B) temp_1 = sorted(list(set_1 - set_2)) print(f&quot;A-B: {{{''.join(temp_1)}}}&quot;) # 差集 difference(B-A) temp_1 = sorted(list(set_2 - set_1)) print(f&quot;B-A: {{{''.join(temp_1)}}}&quot;) if set_2.issubset(set_1): print('A contains B') else: print(&quot;A does not contain B&quot;) if set_1.issubset(set_2): print('B contains A') else: print(&quot;B does not contain A&quot;) b050. 1. 集合運算","link":"/2023/05/15/b050_hide/"},{"title":"Python-fstring","text":"f-string 是 Python 3.6 中引入的一種新的字串格式化方式，全名是 Formatted String Literals。它的主要目的是為了使字串內的變數插值更加容易和直觀。 f-string 的使用方式是在字串前加上字母 f 或 F，然後在字串內部的大括號 {} 中放入需要插入的變數或表達式，如下例： 123name = &quot;Alice&quot;age = 25print(f&quot;My name is {name} and I'm {age} years old.&quot;) 輸出結果將是： 1My name is Alice and I'm 25 years old. 在這個例子中，{name}將被替換成變數 name 的值，{age}將被替換成變數 age 的值。 此外，f-string 還支援在大括號內寫入任意有效的 Python 表達式，並將其計算結果插入到字串中。例如： 123a = 5b = 10print(f&quot;Five plus ten is {a + b}, not {2 * (a + b)}.&quot;) 輸出結果將是： 1Five plus ten is 15, not 30. 在這個例子中，{a + b}將被替換成 a 和 b 的和，{2 * (a + b)}將被替換成 2 * (a + b)的結果。 使用 f-string，我們可以更方便地在字串中插入變數和表達式，並將其計算結果轉換為字串。","link":"/2023/05/12/python_fstring/"},{"title":"a445. 新手訓練系列 - 我的朋友很少","text":"三種寫法:．set 集合法(最慢, 容易 TLE)-&gt;NA:60%．陣列 list 遍歷法(第二快, 遍歷陣列時會花比較多時間)-&gt;NA:70%．樹根節點法 + 壓縮路徑(最快, 可通過)-&gt;AC:1.4s,3.7MB 補充資源 &lt; 演算法筆記 &gt; 集合法 &lt;- 點擊可跳轉 陣列法 &lt;- 點擊可跳轉 樹根法 &lt;- 點擊可跳轉 輸入說明 第一行有三個正整數 N , M , Q (N &lt;= 10000 , M &lt;= 10000 , Q &lt;= 100000) 代表有 N 個人 , M 筆朋友關係 , Q 筆詢問 接下來有 M 行， 每行有兩個正整數 A , B (A,B &lt;= N) 代表 A 和 B 有 朋友 關係 再來有 Q 行， 每行兩個正整數 P , Q (A,B &lt;= N) 輸出說明 請輸出 P 和 Q 是不是朋友 如果是請輸出 “:)” 否則請輸出 “:(“ 樹根節點法 利用 Tree 結構加上路徑壓縮, 可以讓尋根的時間大幅縮短, 與陣列法差在路徑壓縮 1234567891011121314151617181920212223242526272829303132def find_root(x): # 路徑壓縮法 -&gt; 尋根時, 同時更新路徑【父節點 -&gt; 根節點】 global parent_list if parent_list[x]!=x: parent_list[x]=find_root(parent_list[x]) return parent_list[x]def link_tree(x,y): global parent_list x_root=find_root(x) y_root=find_root(y) if x_root!=y_root: # 根節點 (root) 不同, 即把兩根相連 parent_list[y_root]=x_root#step 1-&gt;read ruleN,M,Q=map(int,input().split())parent_list=list(range(N+1)) # 用來存放父母節點, 初始化時, 每個人都是自己父母#print(parent_list)#step 2-&gt;set relationshipfor i in range(0,M,1): temp1,temp2=map(int,input().split()) link_tree(temp1,temp2)#step 3-&gt;find friendfor i in range(0,Q,1): temp1,temp2=map(int,input().split()) if find_root(temp1)==find_root(temp2): print(':)') else: print(':(')#print() 陣列法 利用 list 陣列紀錄所有數的「group」, 默認等於 0, 當輸入兩數皆有群組 (group) 時, 遍歷陣列將兩者的 group 設為相同, 遍歷時會 TLE 1234567891011121314151617181920212223242526272829303132N,M,Q=map(int,input().split())friend_list=[0]*(N+1)group=1for i in range(0,M,1): temp1,temp2=map(int,input().split()) if friend_list[temp1]==0 and friend_list[temp2]==0: friend_list[temp1]=group friend_list[temp2]=group group+=1 #print(' 執行 1') elif friend_list[temp1]!=0 and friend_list[temp2]==0: friend_list[temp2]=friend_list[temp1] #print(' 執行 2') elif friend_list[temp1]==0 and friend_list[temp2]!=0: friend_list[temp1]=friend_list[temp2] #print(' 執行 3') else: ft1=friend_list[temp1] ft2=friend_list[temp2] friend_list=[ft1 if x == ft2 else x for x in friend_list] # 此行會 TLE #print(' 執行 4')for i in range(0,Q,1): temp1,temp2=map(int,input().split()) if temp1==temp2: print(':)') elif friend_list[temp1]==0 or friend_list[temp2]==0: print(&quot;:(&quot;) elif friend_list[temp1]!=friend_list[temp2]: print(&quot;:(&quot;) else: print(&quot;:)&quot;) 集合法 就…用太多迴圈了, 超沒效率 123456789101112131415161718192021222324252627282930313233343536373839404142people,friend,ask=map(int,input().split())temp=set(input().split())friend_list=[temp]point=1check=Falsefor i in range(0,friend-1,1): temp=set(input().split()) for j in range(0,point,1): if friend_list[j]&amp;temp!=set(): friend_list[j]=friend_list[j]|temp check=True break if check==False: friend_list.append(temp) point+=1 # 初始化 check=False# 處理 friend_list 內的聯集for i in range(0,len(friend_list)-1,1): for j in range(1+i,len(friend_list),1): if friend_list[i]&amp;friend_list[j]!=set(): friend_list[i]=friend_list[i].union(friend_list[j]) friend_list[j]=friend_list[i].union(friend_list[j])#friend 處理完畢is_friend=Falsefor i in range (0,ask,1): temp=set(input().split()) if len(temp)==1: print(&quot;:)&quot;) continue for j in range(0,point,1): if temp.issubset(friend_list[j]): print(&quot;:)&quot;) break else: print(&quot;:(&quot;) # 初始化 is_friend=False a445. 新手訓練系列 - 我的朋友很少","link":"/2023/05/15/a445_hide/"},{"title":"Homework 0522 第一題","text":".main-content { flex-grow: 1; padding: 20px; box-sizing: border-box; display: flex; flex-wrap: wrap; justify-content: space-between; } .card { border: 1px solid #ddd; border-radius: 5px; width: calc(50% - 20px); margin-bottom: 20px; padding: 20px; box-sizing: border-box; } .card h2 {margin-top: 0;} .card p {margin: 0;} @media (max-width: 768px) { .card {width: 100%;} } .download-button { font-size: 1.2em; padding: 10px 20px; color: white; background-color: #4CAF50; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease; } .download-button:hover {background-color: #45a049;} function downloadFile() {window.open('/doc_download/scores.csv', '_blank'); } function downloadFile2() {window.open('/doc_download/41075018H_new_scores.csv', '_blank'); } 第一題: 從 moodle 讀進 scores.csv 計算每位學生總分、平均分數 根據總分計算排名 更新 DataFrame 新增三個欄位 (total, average, ranking) 輸出新的 csv 檔案 (new_scores.csv)，按照學號順序排列 請輸出每一科平均分數、標準差與中位數 請輸出每一科及格人數百分比 範例輸出： Chinese 60, 0, 60, 50% English 60, 0, 60, 50% Math 60, 0, 60, 50% Physics 60, 0, 60, 50% Chemical 60, 0, 60, 50% Download scores.csv Download output.csv 12345678910111213141516171819202122232425262728import pandas as pddf_csv_utf8=pd.read_csv(&quot;scores.csv&quot;,encoding=&quot;utf8&quot;)x=df_csv_utf8column=[&quot;Chinese&quot;,&quot;English&quot;,&quot;Math&quot;,&quot;Physics&quot;,&quot;Chemical&quot;]x_average=x[column].mean()x_median=x[column].median()x_std=x[column].std()for i in column: average_above_60 = x[i] &gt;= 60 num_students_above_60 = average_above_60.sum() percent_students_above_60=num_students_above_60/len(x) *100 print(f&quot;{i} {x_average[i]},{x_std[i]},{x_median[i]},{percent_students_above_60}%&quot;)# 計算學生部分 x_students_average=x[column].mean(axis=1)x_students_total=x[column].sum(axis=1)x_students_ranking=x_students_average.rank(ascending=False).astype(int)# 更新 DataFrame 新增三個欄位 (total, average, ranking)df_csv_utf8['total']=x_students_totaldf_csv_utf8['average']=x_students_averagedf_csv_utf8['ranking']=x_students_ranking# 輸出 csvdf_csv_utf8.to_csv(&quot;./41075018H_new_scores.csv&quot;, index=False, encoding=&quot;UTF8&quot;)#print(df_csv_utf8) f-string 技巧","link":"/2023/05/28/homework0522_1_hide/"},{"title":"Homework 0522 第二題","text":".main-content { flex-grow: 1; padding: 20px; box-sizing: border-box; display: flex; flex-wrap: wrap; justify-content: space-between; } .card { border: 1px solid #ddd; border-radius: 5px; width: calc(50% - 20px); margin-bottom: 20px; padding: 20px; box-sizing: border-box; } .card h2 {margin-top: 0;} .card p {margin: 0;} @media (max-width: 768px) { .card {width: 100%;} } .download-button { font-size: 1.2em; padding: 10px 20px; color: white; background-color: #4CAF50; border: none; border-radius: 5px; cursor: pointer; transition: background-color 0.3s ease; } .download-button:hover {background-color: #45a049;} function downloadFile() {window.open('/doc_download/custom.csv', '_blank'); } 第二題: 從 moodle 讀進 custom.csv import pandas as pd df = pd.read_csv(\"custom.csv\", encoding=“BIG5\") print(df) (a) 找出每個顧客的總訂單金額 (b) 找出訂單金額最高的顧客 ID (c) 將訂單日期欄位轉換為日期時間類型，並計算每個年份的總訂單金額 第二題繳交程式碼 (.py)，其中程式碼中須顯示每位顧客的總訂單金額 (以空白區隔不同顧客)、訂單金額最高的顧客 ID 以及每個年份的總訂單金額 (以空白區隔不同年份) 範例輸出： 99999 99999 99999 C999 9999 9999 9999 9999 Download custom.csv 12345678910111213141516171819202122import pandas as pd# 讀取 CSV 文件 df = pd.read_csv(&quot;custom.csv&quot;, encoding=&quot;BIG5&quot;)# 計算每個顧客的總訂單金額 total_order_amount_by_customer = df.groupby(' 顧客 ID')[' 訂單金額 '].sum()print(*total_order_amount_by_customer)print()# 找出訂單金額最高的顧客 IDmax_order_customer = total_order_amount_by_customer.idxmax()print(max_order_customer)print()# 計算每個年份的總訂單金額 df[' 訂單日期 '] = pd.to_datetime(df[' 訂單日期 '])df[' 年份 '] = df[' 訂單日期 '].dt.yeartotal_order_amount_by_year = df.groupby(' 年份 ')[' 訂單金額 '].sum()print(*total_order_amount_by_year)","link":"/2023/05/28/homework0522_2_hide/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"基礎配置","slug":"基礎配置","link":"/tags/%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE/"},{"name":"code","slug":"code","link":"/tags/code/"},{"name":"剪輯","slug":"剪輯","link":"/tags/%E5%89%AA%E8%BC%AF/"},{"name":"封面","slug":"封面","link":"/tags/%E5%B0%81%E9%9D%A2/"},{"name":"AI","slug":"AI","link":"/tags/AI/"},{"name":"實況主","slug":"實況主","link":"/tags/%E5%AF%A6%E6%B3%81%E4%B8%BB/"},{"name":"twitch","slug":"twitch","link":"/tags/twitch/"},{"name":"youtube","slug":"youtube","link":"/tags/youtube/"},{"name":"實況","slug":"實況","link":"/tags/%E5%AF%A6%E6%B3%81/"},{"name":"遊戲","slug":"遊戲","link":"/tags/%E9%81%8A%E6%88%B2/"},{"name":"電腦","slug":"電腦","link":"/tags/%E9%9B%BB%E8%85%A6/"},{"name":"零件","slug":"零件","link":"/tags/%E9%9B%B6%E4%BB%B6/"},{"name":"intel","slug":"intel","link":"/tags/intel/"},{"name":"evga","slug":"evga","link":"/tags/evga/"},{"name":"電機營","slug":"電機營","link":"/tags/%E9%9B%BB%E6%A9%9F%E7%87%9F/"},{"name":"營隊","slug":"營隊","link":"/tags/%E7%87%9F%E9%9A%8A/"},{"name":"台師範","slug":"台師範","link":"/tags/%E5%8F%B0%E5%B8%AB%E7%AF%84/"},{"name":"器攝","slug":"器攝","link":"/tags/%E5%99%A8%E6%94%9D/"},{"name":"傳承","slug":"傳承","link":"/tags/%E5%82%B3%E6%89%BF/"},{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[{"name":"private","slug":"private","link":"/categories/private/"},{"name":"網頁","slug":"網頁","link":"/categories/%E7%B6%B2%E9%A0%81/"},{"name":"zerojudge","slug":"zerojudge","link":"/categories/zerojudge/"},{"name":"委託","slug":"委託","link":"/categories/%E5%A7%94%E8%A8%97/"},{"name":"遊戲","slug":"遊戲","link":"/categories/%E9%81%8A%E6%88%B2/"},{"name":"電腦","slug":"電腦","link":"/categories/%E9%9B%BB%E8%85%A6/"},{"name":"電機營","slug":"電機營","link":"/categories/%E9%9B%BB%E6%A9%9F%E7%87%9F/"},{"name":"python","slug":"python","link":"/categories/python/"}]}